{"version":3,"file":"static/js/879.0911e151.chunk.js","mappings":"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","sources":["recoil/editcafe.js","pages/EditCafe.jsx"],"sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const editcafe = atom({\r\n  key: \"editcafe\",\r\n  default: {\r\n    storeId: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n    monOpen: \"\",\r\n    monClose: \"\",\r\n    tueOpen: \"\",\r\n    tueClose: \"\",\r\n    wedOpen: \"\",\r\n    wedClose: \"\",\r\n    thuOpen: \"\",\r\n    thuClose: \"\",\r\n    friOpen: \"\",\r\n    friClose: \"\",\r\n    satOpen: \"\",\r\n    satClose: \"\",\r\n    sunOpen: \"\",\r\n    sunClose: \"\",\r\n    wifiPassword: \"\",\r\n    etcTime: \"\",\r\n    deleteImageIdList: [],\r\n    updateImageFiles: [],\r\n  },\r\n});\r\n","import * as S from \"./regSt\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nimport { useRecoilState } from \"recoil\";\r\nimport { editcafe } from \"../recoil/editcafe\";\r\n\r\nimport { ReactComponent as Photo } from \"../svg/photo.svg\";\r\nimport { ReactComponent as CloseIcon } from \"../svg/close.svg\";\r\n\r\nimport PVImg from \"../components/common/PVImg\";\r\nimport SearchModal from \"../components/modal/SearchModal\";\r\nimport Row from \"../components/atoms/row\";\r\nimport Header from \"../components/common/Header\";\r\n\r\nimport { updateDay } from \"../hooks/registerHook\";\r\nimport { feedEditApi } from \"../util/management\";\r\nimport CafeTimeBox from \"../components/common/CafeTimeBox\";\r\n\r\nconst Editcafe = () => {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState([]);\r\n  const [register, setRegister] = useRecoilState(editcafe);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loc, setLoc] = useState({ address_name: null });\r\n  const [searchModal, setSearchModal] = useState(false);\r\n  const [dayarr, setDayarr] = useState([]);\r\n  const [delImg, setDelImg] = useState([]);\r\n  const [updateImg, setUpdata] = useState([]);\r\n\r\n  const onLoadFile = (e) => {\r\n    let copy = [...file];\r\n    if (copy.length >= 5) {\r\n      window.alert(\"이미지는 5개만 추가 가능합니다\");\r\n      return;\r\n    } else {\r\n      if (e.target.files[0]) {\r\n        copy = [...copy, e.target.files[0]];\r\n        setFile(copy);\r\n        let coppy = [...updateImg, e.target.files[0]];\r\n\r\n        const copy2 = { ...register };\r\n        copy2.updateImageFiles = coppy;\r\n        setRegister(copy2);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteImg = async (a, idx) => {\r\n    const copy = [...file];\r\n    const copy2 = { ...register };\r\n    let coppy = [...delImg];\r\n    const hasfile = await state.storeImageDtoList.filter(\r\n      (item) => item.imageUrl === a\r\n    );\r\n    if (hasfile[0]) {\r\n      coppy.push(hasfile[0].imageId);\r\n    }\r\n    copy.splice(idx, 1);\r\n    copy2.deleteImageIdList = coppy;\r\n    setFile(copy);\r\n    setRegister(copy2);\r\n    setDelImg(coppy);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const name = e.target.name;\r\n    const copy = { ...register };\r\n    copy[name] = e.target.value;\r\n    setRegister(copy);\r\n  };\r\n\r\n  const convertDay = (j) => {\r\n    if (j === \"onMon\") return \"월\";\r\n    if (j === \"onTue\") return \"화\";\r\n    if (j === \"onWed\") return \"수\";\r\n    if (j === \"onThu\") return \"목\";\r\n    if (j === \"onFri\") return \"금\";\r\n    if (j === \"onSat\") return \"토\";\r\n    if (j === \"onSun\") return \"일\";\r\n  };\r\n  const input = useRef();\r\n\r\n  const submit = async (register) => {\r\n    console.log(register);\r\n    feedEditApi(register)\r\n      .then((res) => {\r\n        console.log(res);\r\n        navigate(\"/management\");\r\n      })\r\n      .catch((err) => {\r\n        window.alert(\"조금 이따가 다시 시도해주세요\");\r\n        navigate(\"/management\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchingData = async () => {\r\n      const copy = { ...register };\r\n      copy.storeId = state.storeId;\r\n      const obj = Object.keys(copy);\r\n      obj.map((item) => {\r\n        if (state[item]) {\r\n          copy.item = state[item];\r\n        }\r\n      });\r\n\r\n      setRegister(copy);\r\n    };\r\n\r\n    const fetching = async () => {\r\n      const obj = Object.keys(state.businessHoursResDto);\r\n      const copy = [...dayarr];\r\n      const copy2 = { ...register };\r\n      obj?.map((item, i) => {\r\n        if (state?.businessHoursResDto) {\r\n          if (item !== \"etcTime\") {\r\n            const day = convertDay(item);\r\n            const open = state?.businessHoursResDto[item]?.open;\r\n            const close = state?.businessHoursResDto[item]?.closed;\r\n            copy.push([open, close, day]);\r\n            updateDay(day, copy2, open, close);\r\n          }\r\n        }\r\n      });\r\n\r\n      setDayarr(copy);\r\n      setRegister(copy2);\r\n    };\r\n    const fetchingImg = async () => {\r\n      const copy = [...file];\r\n      if (state.storeImageDtoList) {\r\n        for (let i = 0; i < state.storeImageDtoList.length; i++) {\r\n          copy.push(state.storeImageDtoList[i].imageUrl);\r\n        }\r\n      }\r\n      setFile(copy);\r\n    };\r\n    if (state) {\r\n      fetching();\r\n      fetchingImg();\r\n      fetchingData();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        align=\"center\"\r\n        mcolor=\"#8B8B8B\"\r\n        text=\"카페 관리\"\r\n        inner=\"카페 상세 수정\"\r\n      >\r\n        <div>\r\n          <S.Submit\r\n            style={{ marginRight: \"15px\" }}\r\n            onClick={() => window.history.back()}\r\n          >\r\n            취소\r\n          </S.Submit>\r\n          <S.Submit\r\n            isFill={\r\n              !register.storeName &&\r\n              !register.siNm &&\r\n              !register.recommendation &&\r\n              !register.wifi &&\r\n              !register.restroom &&\r\n              !register.tableSize &&\r\n              !register.socket\r\n            }\r\n            onClick={() => submit(register)}\r\n          >\r\n            등록\r\n          </S.Submit>\r\n        </div>\r\n      </Header>\r\n      <S.Containaer>\r\n        <Row gap={20}>\r\n          <S.Column>\r\n            <S.InputBox>\r\n              <span>카페명</span>\r\n              <div>{state.storeName}</div>\r\n            </S.InputBox>\r\n            <S.InputBox>\r\n              <span>주소</span>\r\n              <div>{loc.address_name || state.address.fullAddress} </div>\r\n            </S.InputBox>\r\n            <S.Box height={168}>\r\n              <p>장소 사진</p>\r\n              <S.PhotoBox>\r\n                <S.FileUpload\r\n                  onClick={() => {\r\n                    input.current?.click();\r\n                  }}\r\n                >\r\n                  <Photo />\r\n                  <div>{file.length}/5</div>\r\n                  <input\r\n                    ref={input}\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={(e) => onLoadFile(e)}\r\n                  />\r\n                </S.FileUpload>\r\n                {file?.map((a, idx) => {\r\n                  return (\r\n                    <S.ImgBox key={idx}>\r\n                      <CloseIcon\r\n                        name={a.name}\r\n                        onClick={() => deleteImg(a, idx)}\r\n                      />\r\n                      <PVImg img={a} />\r\n                    </S.ImgBox>\r\n                  );\r\n                })}\r\n              </S.PhotoBox>\r\n            </S.Box>\r\n            <CafeTimeBox\r\n              dayarr={dayarr}\r\n              setDayarr={setDayarr}\r\n              register={register}\r\n              setRegister={setRegister}\r\n              isEdit\r\n            />\r\n            <S.TextBox>\r\n              <p>안내사항</p>\r\n              <p>카공인에게 도움이 될 수 있는 정보를 공유해 주세요.</p>\r\n              <p>\r\n                부적절한 정보가 등록될 경우 카페인 운영정책에 따라 삭제될 수\r\n                있어요.\r\n              </p>\r\n            </S.TextBox>\r\n          </S.Column>\r\n          <S.Column>\r\n            <S.InputBox>\r\n              <span>기타 운영 시간</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Ex. 매달 첫째주 수요일\"\r\n                name=\"etcTime\"\r\n                defaultValue={state?.businessHoursResDto?.etcTime}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </S.InputBox>\r\n            <S.InputBox>\r\n              <span>전화번호</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                defaultValue={loc?.phone || state.phone}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder=\"카페 전화번호를 입력해주세요\"\r\n              />\r\n            </S.InputBox>\r\n            <S.InputBox>\r\n              <span>웹사이트</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"website\"\r\n                defaultValue={state.website}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder=\"카페 홈페이지 또는 인스타그램 주소를 입력해주세요\"\r\n              />\r\n            </S.InputBox>\r\n            <S.InputBox>\r\n              <span>와이파이 비밀번호</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"와이파이 비밀번호를 입력해 주세요\"\r\n                name=\"wifiPassword\"\r\n                defaultValue={state.wifiPassword}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </S.InputBox>\r\n          </S.Column>\r\n        </Row>\r\n      </S.Containaer>\r\n      {searchModal && (\r\n        <SearchModal\r\n          setModal={setSearchModal}\r\n          search={search}\r\n          setSearch={setSearch}\r\n          setLoc={setLoc}\r\n          setRegister={setRegister}\r\n          register={register}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Editcafe;\r\n"],"names":["editcafe","atom","key","default","storeId","phone","website","monOpen","monClose","tueOpen","tueClose","wedOpen","wedClose","thuOpen","thuClose","friOpen","friClose","satOpen","satClose","sunOpen","sunClose","wifiPassword","etcTime","deleteImageIdList","updateImageFiles","state","useLocation","navigate","useNavigate","useState","file","setFile","useRecoilState","register","setRegister","search","setSearch","address_name","loc","setLoc","searchModal","setSearchModal","dayarr","setDayarr","delImg","setDelImg","updateImg","deleteImg","a","idx","copy","copy2","coppy","storeImageDtoList","filter","item","imageUrl","hasfile","push","imageId","splice","onChange","e","name","target","value","input","useRef","submit","console","log","feedEditApi","then","res","catch","err","window","alert","useEffect","fetchingData","Object","keys","map","fetching","obj","businessHoursResDto","i","day","j","open","close","closed","updateDay","fetchingImg","length","Header","align","mcolor","text","inner","style","marginRight","onClick","history","back","isFill","storeName","siNm","recommendation","wifi","restroom","tableSize","socket","gap","address","fullAddress","height","current","click","ref","type","accept","display","files","onLoadFile","PVImg","img","CafeTimeBox","isEdit","placeholder","defaultValue","SearchModal","setModal"],"sourceRoot":""}