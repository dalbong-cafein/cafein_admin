{"version":3,"file":"static/js/307.2b16c7b2.chunk.js","mappings":"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","sources":["pages/Notice.jsx","util/desh.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport * as S from \"./style copy\";\r\nimport * as SS from \"../components/noticesStyle\";\r\nimport SelectHeader from \"../components/common/SelectHeader\";\r\nimport NoticePreview from \"../components/modal/NoticePreview\";\r\nimport RedAlert from \"../components/modal/RedAlert\";\r\nimport NoticeDetailModal from \"../components/modal/NoticeDetailModal\";\r\nimport Alert from \"../components/modal/Alert\";\r\nimport FilterRow from \"../components/common/FilterRow\";\r\n\r\nimport None from \"../components/common/None\";\r\nimport { adminFeedListApi } from \"../util/desh\";\r\n\r\nimport { useRecoilState } from \"recoil\";\r\nimport { registerNotice } from \"../recoil/NNotice\";\r\nimport { postDelApi, registerNoticeApi } from \"../util/events\";\r\n\r\nimport usePagination from \"../hooks/usePagination\";\r\nimport RegNoticeBox from \"../components/RegNoticeBox\";\r\n\r\nconst Notice = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectItem, setSelectItem] = useState([]);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [register, setRegister] = useRecoilState(registerNotice);\r\n  const [preview, setPreview] = useState(false);\r\n\r\n  // pagination\r\n  const [page, sort, item, count, setCount, setPage, onDesc, onAsc] = usePagination(10);\r\n  const [alert, setAlert] = useState(false);\r\n  const [Dalert, setDAlert] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const onSubmit = (register) => {\r\n    registerNoticeApi(register)\r\n      .then((res) => {\r\n        setAlert(false);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const onDel = () => {\r\n    postDelApi(selectItem.boardId)\r\n      .then((res) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const searchData = () => {\r\n    adminFeedListApi(search, page, sort)\r\n      .then((res) => {\r\n        setCount(res.data.data.boardCnt);\r\n        setData(res.data.data.boardResDtoList.dtoList);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  useEffect(() => {\r\n    const copy = { ...register };\r\n    copy.boardCategoryId = 1;\r\n    setRegister(copy);\r\n    adminFeedListApi(page, sort, search).then((res) => {\r\n      setCount(res.data.data.boardCnt);\r\n      setData(res.data.data.boardResDtoList.dtoList);\r\n    });\r\n  }, [sort, page]);\r\n  return (\r\n    <>\r\n      <SelectHeader menu=\"notice\" menu1=\"notice\" menu2=\"qna\" Tmenu1=\"공지사항\" Tmenu2=\"자주 묻는 질문\" />\r\n      <SS.Container>\r\n        <div>\r\n          <FilterRow\r\n            sort={sort}\r\n            count={count}\r\n            page={page}\r\n            item={item}\r\n            onAsc={onAsc}\r\n            onDesc={onDesc}\r\n            setPage={setPage}\r\n            search={search}\r\n            setSearch={setSearch}\r\n            searchData={searchData}\r\n            nodrop\r\n          />\r\n          <S.Wrapper isNull={data.length === 0}>\r\n            <TableHeader>\r\n              <div>분류</div>\r\n              <div>제목</div>\r\n              <div>등록일</div>\r\n            </TableHeader>\r\n            <S.DataBox>\r\n              {data &&\r\n                data.map((item, i) => (\r\n                  <ItemRow\r\n                    key={i}\r\n                    onClick={() => {\r\n                      setModal(true);\r\n                      setSelectItem(item);\r\n                    }}\r\n                  >\r\n                    <div>{String(item.boardId).padStart(6, \"0\")}</div>\r\n                    <div>\r\n                      <p\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          marginBottom: \"5px\",\r\n                          width: \"250px\",\r\n                          overflow: \"hidden\",\r\n                          textOverflow: \"ellipsis\",\r\n                          whiteSpace: \"nowrap\",\r\n                          textAlign: \"left\",\r\n                        }}\r\n                      >\r\n                        {item.title}\r\n                      </p>\r\n                      <p\r\n                        style={{\r\n                          width: \"250px\",\r\n                          overflow: \"hidden\",\r\n                          textOverflow: \"ellipsis\",\r\n                          whiteSpace: \"nowrap\",\r\n                          textAlign: \"left\",\r\n                        }}\r\n                      >\r\n                        {item.content}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div>{String(item.regDateTime).split(\"T\")[0]}</div>\r\n                  </ItemRow>\r\n                ))}\r\n            </S.DataBox>\r\n          </S.Wrapper>\r\n          {data.length == 0 && <None text=\"공지\" />}\r\n        </div>\r\n        <RegNoticeBox register={register} setRegister={setRegister} setPreview={setPreview} setAlert={setAlert} />\r\n      </SS.Container>\r\n      {alert && (\r\n        <Alert\r\n          setAlert={setAlert}\r\n          text=\"공지사항 등록\"\r\n          subtext=\"게시물을 등록하시겠습니까?\"\r\n          func={onSubmit}\r\n          forFunc={register}\r\n        />\r\n      )}\r\n\r\n      {preview && <NoticePreview item={register} setModal={setPreview} file={register.imageFiles} menu=\"notice\" />}\r\n      {modal && <NoticeDetailModal selectItem={selectItem} setModal={setModal} menu=\"notice\" setAlert={setDAlert} />}\r\n      {Dalert && (\r\n        <RedAlert\r\n          text=\"공지사항 삭제\"\r\n          text1=\"공지사항을 \"\r\n          text2=\"삭제\"\r\n          text3=\"하시겠습니까?\"\r\n          setAlert={setDAlert}\r\n          func={onDel}\r\n          forFunc={null}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst TableHeader = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  width: 100%;\r\n  color: #8b8b8b;\r\n  text-align: center;\r\n  line-height: 42px;\r\n  border-bottom: 1px solid #515151;\r\n  & > div {\r\n    flex: 0.5;\r\n    border-right: 1px solid #515151;\r\n  }\r\n  & div:nth-child(2) {\r\n    flex: 2.5;\r\n  }\r\n\r\n  & > div:last-child {\r\n    flex: 1;\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nconst ItemRow = styled.div`\r\n  display: flex;\r\n  color: #e3e3e3;\r\n  height: calc(65vh / 9);\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #515151;\r\n  font-size: 14px;\r\n  & > div {\r\n    // padding: 0 0 0 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: left;\r\n    line-height: 18px;\r\n    box-sizing: border-box;\r\n    flex: 0.5;\r\n    border-right: 1px solid #515151;\r\n  }\r\n\r\n  & div:nth-child(2) {\r\n    flex: 2.5;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n    & > p {\r\n      margin: 0 0 0 16px;\r\n    }\r\n  }\r\n\r\n  & > div:last-child {\r\n    flex: 1;\r\n    border-right: none;\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport default Notice;\r\n","import { withAuthInstance } from \"./index\";\r\n\r\nexport const adminFeedListApi = async (page, sort, search) => {\r\n  return await withAuthInstance.get(`/boards?page=${page}&sort=${sort}${search && `&keyword=${search}`}`);\r\n};\r\n\r\n//오늘 새 데이터 추가\r\nexport const deshDataApi = async () => {\r\n  return await withAuthInstance.get(\"/register-data\");\r\n};\r\n\r\nexport const marketingDListApi = async () => {\r\n  return await withAuthInstance.get(`/coupons/limit`);\r\n};\r\n"],"names":["TableHeader","styled","ItemRow","useState","data","setData","selectItem","setSelectItem","search","setSearch","useRecoilState","registerNotice","register","setRegister","preview","setPreview","usePagination","page","sort","item","count","setCount","setPage","onDesc","onAsc","alert","setAlert","Dalert","setDAlert","modal","setModal","useEffect","copy","boardCategoryId","adminFeedListApi","then","res","boardCnt","boardResDtoList","dtoList","menu","menu1","menu2","Tmenu1","Tmenu2","searchData","catch","err","console","log","nodrop","isNull","length","map","i","onClick","String","boardId","padStart","style","fontWeight","marginBottom","width","overflow","textOverflow","whiteSpace","textAlign","title","content","regDateTime","split","text","subtext","func","registerNoticeApi","window","location","reload","forFunc","file","imageFiles","text1","text2","text3","postDelApi","withAuthInstance","deshDataApi","marketingDListApi"],"sourceRoot":""}