{"version":3,"file":"static/js/738.49e38b22.chunk.js","mappings":"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","sources":["pages/QnA.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport * as S from \"./style copy\";\r\nimport * as SS from \"../components/noticesStyle\";\r\n\r\nimport SelectHeader from \"../components/common/SelectHeader\";\r\n\r\nimport { registerNotice } from \"../recoil/NNotice\";\r\nimport { postDelApi, registerNoticeApi, eventListApi } from \"../util/events\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport Alert from \"../components/modal/Alert\";\r\nimport None from \"../components/common/None\";\r\nimport NoticePreview from \"../components/modal/NoticePreview\";\r\nimport RedAlert from \"../components/modal/RedAlert\";\r\nimport NoticeDetailModal from \"../components/modal/NoticeDetailModal\";\r\nimport usePagination from \"../hooks/usePagination\";\r\nimport FilterRow from \"../components/common/FilterRow\";\r\nimport RegNoticeBox from \"../components/RegNoticeBox\";\r\n\r\nconst QnAs = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  // pagination\r\n  const [page, sort, item, count, setCount, setPage, onDesc, onAsc] = usePagination();\r\n\r\n  const [alert, setAlert] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [Dalert, setDAlert] = useState(false);\r\n  const [selectItem, setSelectItem] = useState([]);\r\n\r\n  const [preview, setPreview] = useState(false);\r\n  const [register, setRegister] = useRecoilState(registerNotice);\r\n\r\n  const onSubmit = (register) => {\r\n    registerNoticeApi(register)\r\n      .then((res) => {\r\n        setAlert(false);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const onDel = () => {\r\n    postDelApi(selectItem.boardId)\r\n      .then((res) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const searchData = () => {\r\n    eventListApi(search, page, sort)\r\n      .then((res) => {\r\n        setCount(res.data.data.boardCnt);\r\n        setData(res.data.data.boardResDtoList.dtoList);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const copy = { ...register };\r\n    copy.boardCategoryId = 2;\r\n    setRegister(copy);\r\n    eventListApi(page, sort).then((res) => {\r\n      setCount(res.data.data.boardCnt);\r\n      setData(res.data.data.boardResDtoList.dtoList);\r\n    });\r\n  }, [sort, page]);\r\n\r\n  return (\r\n    <>\r\n      <SelectHeader menu=\"qna\" menu1=\"notice\" menu2=\"qna\" Tmenu1=\"공지사항\" Tmenu2=\"자주 묻는 질문\" />\r\n      <SS.Container>\r\n        <div>\r\n          <FilterRow\r\n            sort={sort}\r\n            count={count}\r\n            page={page}\r\n            item={item}\r\n            onAsc={onAsc}\r\n            onDesc={onDesc}\r\n            setPage={setPage}\r\n            search={search}\r\n            setSearch={setSearch}\r\n            searchData={searchData}\r\n            nodrop\r\n          />\r\n          <S.Wrapper isNull={data.length === 0}>\r\n            <TableHeader>\r\n              <div>분류</div>\r\n              <div>제목</div>\r\n              <div>등록일</div>\r\n            </TableHeader>\r\n            {data.map((item, i) => (\r\n              <ItemRow\r\n                key={i}\r\n                onClick={() => {\r\n                  setModal(true);\r\n                  setSelectItem(item);\r\n                }}\r\n              >\r\n                <div>{String(item.boardId).padStart(6, \"0\")}</div>\r\n                <div>\r\n                  <p style={{ fontWeight: \"bold\", marginBottom: \"5px\" }}>{item.title}</p>\r\n                  <p>{item.content.length > 30 ? `${item.content.slice(0, 30)}...` : item.content}</p>\r\n                </div>\r\n\r\n                <div>{String(item.regDateTime).split(\"T\")[0]}</div>\r\n              </ItemRow>\r\n            ))}\r\n          </S.Wrapper>\r\n          {data.length == 0 && <None text=\"QnA\" />}\r\n        </div>\r\n        <RegNoticeBox\r\n          register={register}\r\n          setRegister={setRegister}\r\n          setPreview={setPreview}\r\n          setAlert={setAlert}\r\n          title=\"새 자주 묻는 질문 등록\"\r\n        />\r\n      </SS.Container>\r\n      {alert && (\r\n        <Alert\r\n          setAlert={setAlert}\r\n          text=\"자주 묻는 질문 등록\"\r\n          subtext=\"게시물을 등록하시겠습니까?\"\r\n          func={onSubmit}\r\n          forFunc={register}\r\n        />\r\n      )}\r\n      {preview && <NoticePreview item={register} setModal={setPreview} file={register.imageFiles} menu=\"QnA\" />}\r\n      {modal && <NoticeDetailModal selectItem={selectItem} setModal={setModal} menu=\"QnA\" setAlert={setDAlert} />}\r\n      {Dalert && (\r\n        <RedAlert\r\n          text=\"자주 묻는 질문 삭제\"\r\n          text1=\"자주 묻는 질문을 \"\r\n          text2=\"삭제\"\r\n          text3=\"하시겠습니까?\"\r\n          setAlert={setDAlert}\r\n          func={onDel}\r\n          forFunc={null}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst TableHeader = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  width: 100%;\r\n  color: #8b8b8b;\r\n  text-align: center;\r\n  line-height: 42px;\r\n  border-bottom: 1px solid #515151;\r\n  & > div {\r\n    flex: 0.5;\r\n    border-right: 1px solid #515151;\r\n  }\r\n  & div:nth-child(2) {\r\n    flex: 2.5;\r\n  }\r\n\r\n  & > div:last-child {\r\n    flex: 1;\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nconst ItemRow = styled.div`\r\n  display: flex;\r\n  color: #e3e3e3;\r\n  height: calc(65vh / 9);\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  border-bottom: 1px solid #515151;\r\n  & > div {\r\n    // padding: 0 0 0 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: left;\r\n    line-height: 18px;\r\n    box-sizing: border-box;\r\n    flex: 0.5;\r\n    border-right: 1px solid #515151;\r\n  }\r\n\r\n  & div:nth-child(2) {\r\n    flex: 2.5;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n    & > p {\r\n      margin: 0 0 0 16px;\r\n    }\r\n  }\r\n\r\n  & > div:last-child {\r\n    flex: 1;\r\n    border-right: none;\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport default QnAs;\r\n"],"names":["TableHeader","styled","ItemRow","useState","data","setData","search","setSearch","usePagination","page","sort","item","count","setCount","setPage","onDesc","onAsc","alert","setAlert","modal","setModal","Dalert","setDAlert","selectItem","setSelectItem","preview","setPreview","useRecoilState","registerNotice","register","setRegister","useEffect","copy","boardCategoryId","eventListApi","then","res","boardCnt","boardResDtoList","dtoList","menu","menu1","menu2","Tmenu1","Tmenu2","searchData","catch","err","console","log","nodrop","isNull","length","map","i","onClick","String","boardId","padStart","style","fontWeight","marginBottom","title","content","slice","regDateTime","split","text","subtext","func","registerNoticeApi","window","location","reload","forFunc","file","imageFiles","text1","text2","text3","postDelApi"],"sourceRoot":""}