{"version":3,"file":"static/js/786.d082d059.chunk.js","mappings":"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","sources":["components/common/modal/ReportReason.jsx","components/common/modal/MReview.jsx","components/reviewTemp.jsx","pages/review.jsx","util/review.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Portal from \"./Portal\";\r\nimport styled from \"styled-components\";\r\nimport * as S from \"./style\";\r\nimport { ReactComponent as Close } from \"../../../svg/close2.svg\";\r\nimport { ReactComponent as Check } from \"../../../svg/check.svg\";\r\nimport RedAlert from \"./redAlert\";\r\nimport { reviewReportApi } from \"../../../util/review\";\r\n\r\nexport default function ReportReason({ setModal, id }) {\r\n  const closeModal = () => {\r\n    setModal(false);\r\n  };\r\n  const [selected, setSelected] = useState({});\r\n  const [report, setReport] = useState(false);\r\n\r\n  const list = [\r\n    \"카페와 관련 없는 내용\",\r\n    \"음란성, 욕설 등 부적절한 내용\",\r\n    \"부적절한 홍보 또는 광고\",\r\n    \"개인정보 유출 위험\",\r\n    \"리뷰 작성, 취지에 맞지 않는 내용(복사글 등)\",\r\n    \"저작권 도용 의심\",\r\n    \"기타\",\r\n  ];\r\n\r\n  const onSelect = (item, i) => {\r\n    setSelected({ content: item, id: i + 1 });\r\n  };\r\n\r\n  const onReport = () => {\r\n    reviewReportApi(id, selected.id)\r\n      .then((res) => {\r\n        window.alert(\"신고되었습니다\");\r\n        setModal(false);\r\n      })\r\n      .catch((err) => {\r\n        window.alert(\"나중에 다시 시도해주세요\");\r\n        window.location.reload();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Portal>\r\n        <S.ModalBox>\r\n          <S.ModalHeader>\r\n            <p>리뷰 신고</p>\r\n            <Close onClick={closeModal} />\r\n          </S.ModalHeader>\r\n          <S.ModalContent>\r\n            <TextBox>\r\n              <p>신고하려는 이유를 알려주세요.</p>\r\n              <p>신고 이유가 타당하지 않으면 반영되지 않을 수 있습니다.</p>\r\n            </TextBox>\r\n\r\n            {list.map((item, i) => (\r\n              <RItem\r\n                key={i}\r\n                onClick={() => onSelect(item, i)}\r\n                isSelected={selected.content === item}\r\n              >\r\n                <p>{item}</p>\r\n                <Check />\r\n              </RItem>\r\n            ))}\r\n          </S.ModalContent>\r\n          <ModalFooter>\r\n            <S.Btn color={\"#2563eb\"} onClick={() => setReport(true)}>\r\n              신고\r\n            </S.Btn>\r\n          </ModalFooter>\r\n        </S.ModalBox>\r\n      </Portal>\r\n      {report && (\r\n        <RedAlert\r\n          text={\"리뷰 신고\"}\r\n          text1={\"리뷰를\"}\r\n          text2={\" 신고\"}\r\n          text3={\"하시겠습니까?\"}\r\n          setAlert={setReport}\r\n          func={onReport}\r\n          forFunc={null}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst ModalFooter = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  justify-content: flex-end;\r\n  align-items: baseline;\r\n  & > p {\r\n    color: #acacac;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  & > p:first-child {\r\n    font-size: 16px;\r\n    color: #f6f6f6;\r\n    font-weight: 700;\r\n    line-height: 28px;\r\n  }\r\n  & > p:nth-child(2) {\r\n    font-size: 14px;\r\n    color: #8b8b8b;\r\n  }\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst RItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 24px;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  & > p {\r\n    color: ${(props) => (props.isSelected ? \"#FC6406\" : \"#E3E3E3\")};\r\n  }\r\n\r\n  & > svg {\r\n    path {\r\n      fill: ${(props) => (props.isSelected ? \"#FC6406\" : \"#E3E3E3\")};\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Portal from \"./Portal\";\r\nimport * as S from \"./style\";\r\nimport { ReactComponent as Close } from \"../../../svg/close2.svg\";\r\nimport styled from \"styled-components\";\r\nimport { reviewDelApi } from \"../../../util/review\";\r\n\r\nimport RedAlert from \"./redAlert\";\r\nimport ReportReason from \"./ReportReason\";\r\nimport Row from \"../../atoms/row\";\r\nimport Sliders from \"../carousel/carousel\";\r\nimport Stars from \"../../atoms/stars\";\r\n\r\nexport default function MReview({ setModal, selectItem2 }) {\r\n  const closeModal = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  const [del, setDel] = useState(false);\r\n  const [rReason, setRReason] = useState(false);\r\n  const [slider, setSlider] = useState(false);\r\n\r\n  const onDel = () => {\r\n    reviewDelApi(selectItem2.reviewId)\r\n      .then((res) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Portal>\r\n        <S.ModalBox height={\"790px\"}>\r\n          <S.ModalHeader>\r\n            <p>리뷰 상세</p>\r\n            <Close onClick={closeModal} />\r\n          </S.ModalHeader>\r\n          <S.ModalContent height={\"620px\"}>\r\n            <Columnbox>\r\n              <Line>\r\n                <span>분류</span>\r\n                <p>{String(selectItem2.reviewId).padStart(6, \"0\")}</p>\r\n              </Line>\r\n              <Line>\r\n                <span>회원 정보</span>\r\n                <p>{String(selectItem2.writerId).padStart(6, \"0\")}</p>\r\n                <p>{selectItem2.nicknameOfWriter || \"-\"}</p>\r\n                <p>{`방문 ${selectItem2?.visitCnt}번째`}</p>\r\n              </Line>\r\n              <Line>\r\n                <span>카페 정보</span>\r\n                <p>{String(selectItem2.storeId).padStart(6, \"0\")}</p>\r\n                <p>{selectItem2.storeName}</p>\r\n              </Line>\r\n              <Line>\r\n                <span>등록일</span>\r\n                <p>{String(selectItem2.regDateTime).replace(\"T\", \" \")}</p>\r\n              </Line>\r\n              <Line>\r\n                <span>최종수정일</span>\r\n                <p>{String(selectItem2.modDateTime).replace(\"T\", \" \")}</p>\r\n              </Line>\r\n            </Columnbox>\r\n            <RecommendBox>\r\n              <p>\r\n                {selectItem2.recommendation === \"GOOD\"\r\n                  ? \"추천해요\"\r\n                  : selectItem2.recommendation === \"NORMAL\"\r\n                  ? \"그저그래요\"\r\n                  : \"별로예요\"}\r\n              </p>\r\n            </RecommendBox>\r\n            <Row\r\n              gap={16}\r\n              align={\"baseline\"}\r\n              style={{ margin: \"10px 0 0\", fontSize: \"14px\" }}\r\n            >\r\n              <Row gap={8} align={\"baseline\"} style={{ width: \"120px\" }}>\r\n                와이파이\r\n                <Stars\r\n                  width={11}\r\n                  gap={2}\r\n                  num={selectItem2.detailEvaluation.wifi}\r\n                  color={\"#FD9759\"}\r\n                />\r\n              </Row>\r\n              <Row gap={8} align={\"baseline\"}>\r\n                콘센트\r\n                <Stars\r\n                  color={\"#FD9759\"}\r\n                  width={11}\r\n                  gap={2}\r\n                  num={selectItem2.detailEvaluation.socket}\r\n                />\r\n              </Row>\r\n            </Row>\r\n            <Row gap={16} align={\"baseline\"} style={{ fontSize: \"14px\" }}>\r\n              <Row gap={8} align={\"baseline\"} style={{ width: \"120px\" }}>\r\n                화장실\r\n                <Stars\r\n                  color={\"#FD9759\"}\r\n                  width={11}\r\n                  gap={2}\r\n                  num={selectItem2.detailEvaluation.restroom}\r\n                />\r\n              </Row>\r\n              <Row gap={8} align={\"baseline\"}>\r\n                테이블\r\n                <Stars\r\n                  color={\"#FD9759\"}\r\n                  width={11}\r\n                  gap={2}\r\n                  num={selectItem2.detailEvaluation.tableSize}\r\n                />\r\n              </Row>\r\n            </Row>\r\n            <Text>{selectItem2.content || \"-\"}</Text>\r\n\r\n            {selectItem2.reviewImageDtoList && (\r\n              <Row justify=\"space-between\">\r\n                {selectItem2.reviewImageDtoList.map((item, i) => (\r\n                  <Pic key={i} onClick={() => setSlider(true)}>\r\n                    <img\r\n                      src={process.env.PUBLIC_URL + item.imageUrl}\r\n                      alt=\"img\"\r\n                    />\r\n                  </Pic>\r\n                ))}\r\n              </Row>\r\n            )}\r\n          </S.ModalContent>\r\n          <S.ModalFooter style={{ justifyContent: \"end\" }}>\r\n            <Row gap={24}>\r\n              <S.Btn color={\"#2563eb\"} onClick={() => setDel(true)}>\r\n                삭제\r\n              </S.Btn>\r\n              <S.Btn color={\"#515151\"} onClick={() => setRReason(true)}>\r\n                신고\r\n              </S.Btn>\r\n            </Row>\r\n          </S.ModalFooter>\r\n        </S.ModalBox>\r\n      </Portal>\r\n\r\n      {del && (\r\n        <RedAlert\r\n          text={\"리뷰 삭제\"}\r\n          text1={\"리뷰를\"}\r\n          text2={\" 삭제\"}\r\n          text3={\"하시겠습니까?\"}\r\n          setAlert={setDel}\r\n          func={onDel}\r\n          forFunc={selectItem2.reviewId}\r\n        />\r\n      )}\r\n      {rReason && (\r\n        <ReportReason setModal={setRReason} id={selectItem2.reviewId} />\r\n      )}\r\n      {slider && (\r\n        <Sliders setModal={setSlider} imgs={selectItem2?.reviewImageDtoList} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst Columnbox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 14px;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  display: flex;\r\n  gap: 32px;\r\n  width: 100%;\r\n  padding-bottom: 13px;\r\n  border-bottom: 1px solid ${(props) => (props.color ? props.color : \"#333333\")};\r\n  & > span {\r\n    width: 100px;\r\n    text-align: right;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    color: #8b8b8b;\r\n  }\r\n  & > p:nth-child(2) {\r\n    color: #e3e3e3;\r\n  }\r\n  & > p:nth-child(3) {\r\n    color: #fc7521;\r\n  }\r\n  & > p:nth-child(4) {\r\n    color: #acacac;\r\n  }\r\n`;\r\n\r\nconst Text = styled.div`\r\n  padding: 24px 0;\r\n  white-space: pre-line;\r\n  line-height: 20px;\r\n`;\r\n\r\nconst Pic = styled.div`\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 6px;\r\n  background-color: #c4c4c4;\r\n  & > img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 6px;\r\n  }\r\n`;\r\n\r\nconst RecommendBox = styled.div`\r\n  margin-top: 32px;\r\n  max-width: 63px;\r\n  height: 22px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 13px;\r\n  background-color: #fff0e6;\r\n  padding: 4px 8px;\r\n  & > p {\r\n    color: #fc6406;\r\n  }\r\n`;\r\n","import Row from \"./atoms/row\";\r\nimport * as S from \"../pages/style copy\";\r\nimport styled from \"styled-components\";\r\nimport { ReactComponent as Memo } from \"../svg/memo.svg\";\r\nimport Stars from \"./atoms/stars\";\r\nconst ReviewTemp = ({\r\n  temp,\r\n  onModal,\r\n  setSelectItem,\r\n  setMemoModal,\r\n  setMemoId,\r\n}) => {\r\n  return (\r\n    <S.DataBox>\r\n      {temp &&\r\n        temp.map((item, i) => (\r\n          <ItemRow key={i} hasMemoId={item.memoId}>\r\n            <div onClick={() => onModal(item)}>\r\n              {String(item.reviewId).padStart(6, \"0\")}\r\n            </div>\r\n            <div onClick={() => onModal(item)}>\r\n              <div>\r\n                {item.recommendation === \"GOOD\"\r\n                  ? \"추천해요\"\r\n                  : item.recommendation === \"NORMAL\"\r\n                  ? \"그저그래요\"\r\n                  : \"별로예요\"}\r\n              </div>\r\n            </div>\r\n            <div onClick={() => onModal(item)}>\r\n              <Row gap={16} align={\"baseline\"} style={{ fontSize: \"14px\" }}>\r\n                <Row gap={8} align={\"baseline\"}>\r\n                  와이파이\r\n                  <Stars\r\n                    width={11}\r\n                    gap={2}\r\n                    num={item.detailEvaluation.wifi}\r\n                    color={\"#FD9759\"}\r\n                  />\r\n                </Row>\r\n                <Row gap={8} align={\"baseline\"}>\r\n                  콘센트\r\n                  <Stars\r\n                    color={\"#FD9759\"}\r\n                    width={11}\r\n                    gap={2}\r\n                    num={item.detailEvaluation.socket}\r\n                  />\r\n                </Row>\r\n                <Row gap={8} align={\"baseline\"}>\r\n                  화장실\r\n                  <Stars\r\n                    color={\"#FD9759\"}\r\n                    width={11}\r\n                    gap={2}\r\n                    num={item.detailEvaluation.restroom}\r\n                  />\r\n                </Row>\r\n                <Row gap={8} align={\"baseline\"}>\r\n                  테이블\r\n                  <Stars\r\n                    color={\"#FD9759\"}\r\n                    width={11}\r\n                    gap={2}\r\n                    num={item.detailEvaluation.tableSize}\r\n                  />\r\n                </Row>\r\n              </Row>\r\n              {item.content && (\r\n                <Row gap={16} align={\"baseline\"} style={{ fontSize: \"14px\" }}>\r\n                  {item.content.length > 45\r\n                    ? `${item.content.slice(0, 45)}...`\r\n                    : item.content}\r\n                </Row>\r\n              )}\r\n            </div>\r\n            <div onClick={() => onModal(item)}>\r\n              {String(item.writerId).padStart(6, \"0\")}\r\n            </div>\r\n            <S.DataBox onClick={() => onModal(item)}>\r\n              <div>{String(item.storeId).padStart(6, \"0\")}</div>\r\n              <div>{item.storeName}</div>\r\n            </S.DataBox>\r\n            <div onClick={() => onModal(item)}>\r\n              {item.regDateTime.split(\"T\")[0]}\r\n            </div>\r\n            <div onClick={() => onModal(item)}>\r\n              {item.modDateTime.split(\"T\")[0]}\r\n            </div>\r\n            <div>\r\n              <Memo\r\n                onClick={() => {\r\n                  setSelectItem(item);\r\n                  setMemoId(item.memoId);\r\n                  setMemoModal(true);\r\n                }}\r\n              />\r\n            </div>\r\n          </ItemRow>\r\n        ))}\r\n    </S.DataBox>\r\n  );\r\n};\r\n\r\nconst ItemRow = styled.div`\r\n  display: flex;\r\n  color: #e3e3e3;\r\n  font-size: 14px;\r\n  height: 72px;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #515151;\r\n\r\n  & > div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    line-height: 18px;\r\n    box-sizing: border-box;\r\n    flex: 0.7;\r\n    border-right: 1px solid #515151;\r\n  }\r\n  & > div:nth-child(2) > div {\r\n    margin: auto;\r\n    border-radius: 20px;\r\n    color: #fc6406;\r\n    font-size: 13px;\r\n    background-color: #fff0e6;\r\n    padding: 4px 8px;\r\n  }\r\n  & > div:nth-child(3) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: baseline;\r\n    text-aline: left;\r\n    flex: 4;\r\n    gap: 8px;\r\n    & > div {\r\n      padding-left: 12px;\r\n    }\r\n  }\r\n\r\n  & > div:nth-child(5) {\r\n    flex: 1.5;\r\n  }\r\n  & > div:last-child {\r\n    border-right: none;\r\n    border-bottom: none;\r\n  }\r\n  & > div:nth-child(2) {\r\n    justify-content: start;\r\n  }\r\n  & > div:last-child {\r\n    flex: 0.5;\r\n    & > svg {\r\n      path {\r\n        fill: ${(props) => (props.hasMemoId ? \"#E3E3E3\" : \"#646464\")};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReviewTemp;\r\n","import Header from \"../components/common/header\";\r\nimport * as S from \"./style copy\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Row from \"../components/atoms/row\";\r\n\r\nimport Paging from \"../components/common/Pagination\";\r\n\r\nimport { ReactComponent as Search } from \"../svg/Search.svg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ReactComponent as Memo } from \"../svg/memo.svg\";\r\nimport { ReactComponent as Check } from \"../svg/check.svg\";\r\nimport { ReactComponent as ArrowDown } from \"../svg/ArrowDown.svg\";\r\n\r\nimport MReview from \"../components/common/modal/MReview\";\r\nimport {\r\n  reviewDataApi,\r\n  reviewDetailApi,\r\n  reviewSearchApi,\r\n} from \"../util/review\";\r\nimport None from \"../components/None\";\r\nimport DropBox from \"../components/common/dropbox\";\r\nimport ReviewTemp from \"../components/reviewTemp\";\r\nimport MemoModal from \"../components/common/modal/memo\";\r\n\r\nconst Review = () => {\r\n  const [sort, setSort] = useState(\"DESC\");\r\n  const navigate = useNavigate();\r\n  const [temp, setTemp] = useState([]);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  // pagination\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [items, setItems] = useState(9);\r\n\r\n  //drop\r\n  const [isDrop, setIsDrop] = useState(false);\r\n  const [selected, setSelected] = useState(\"전체\");\r\n  const [arr, setArr] = useState([\"내용\", \"회원 번호\", \"카페 번호\"]);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [memoId, setMemoId] = useState(null);\r\n  const [memoModal, setMemoModal] = useState(false);\r\n  const [selectItem2, setSelectItem2] = useState([]);\r\n\r\n  const handlePageChange = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const onModal = (item) => {\r\n    reviewDetailApi(item.reviewId)\r\n      .then((res) => {\r\n        setSelectItem2(res.data.data);\r\n        setModal(!modal);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const sortData = (id) => {\r\n    setSort(id);\r\n  };\r\n  const onclick = () => {\r\n    setSort(\"DESC\");\r\n    setPage(1);\r\n    searchData();\r\n  };\r\n\r\n  const searchData = () => {\r\n    if (selected === \"내용\") {\r\n      reviewSearchApi(search, \"w\", page, sort).then((res) => {\r\n        setTemp(res.data.data.reviewResDtoList.dtoList);\r\n      });\r\n    }\r\n    if (selected === \"회원 번호\") {\r\n      reviewSearchApi(search, \"c\", page, sort).then((res) => {\r\n        console.log(res);\r\n        setTemp(res.data.data.reviewResDtoList.dtoList);\r\n      });\r\n    }\r\n    if (selected === \"카페 번호\") {\r\n      reviewSearchApi(search, \"s\", page, sort).then((res) =>\r\n        setTemp(res.data.data.reviewResDtoList.dtoList)\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeData = () => {\r\n    if (selected === \"전체\") {\r\n      reviewDataApi(page, sort)\r\n        .then((res) => {\r\n          setCount(res.data.data.reviewCnt);\r\n          setTemp(res.data.data.reviewResDtoList.dtoList);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      searchData();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    changeData();\r\n  }, [page, sort]);\r\n  return (\r\n    <>\r\n      <Header\r\n        mcolor={\"#fff\"}\r\n        text={\"카페 리뷰\"}\r\n        subText={`등록된 리뷰 ${count}건`}\r\n      />\r\n      <Row\r\n        justify={\"space-between\"}\r\n        align={\"baseline\"}\r\n        style={{ marginBottom: \"20px\" }}\r\n      >\r\n        <Row gap={15}>\r\n          <S.Sbtn id=\"DESC\" onClick={(e) => sortData(e.target.id)}>\r\n            최신순\r\n            {sort === \"DESC\" && <Check />}\r\n          </S.Sbtn>\r\n          <S.Sbtn id=\"ASC\" onClick={(e) => sortData(e.target.id)}>\r\n            오래된 순{sort === \"ASC\" && <Check />}\r\n          </S.Sbtn>\r\n        </Row>\r\n        <Row gap={15} align={\"baseline\"}>\r\n          <Paging\r\n            count={count}\r\n            handlePageChange={handlePageChange}\r\n            setPage={setPage}\r\n            page={page}\r\n          />\r\n          <S.Sbtn onClick={() => setIsDrop(!isDrop)}>\r\n            <p>{selected}</p>\r\n            <ArrowDown />\r\n          </S.Sbtn>\r\n\r\n          {isDrop && (\r\n            <DropBox\r\n              arr={arr}\r\n              setIsDrop={setIsDrop}\r\n              setArr={setArr}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n          )}\r\n          <Row style={{ borderBottom: \"1px solid #fff\" }}>\r\n            <S.Input\r\n              placeholder=\"검색\"\r\n              type=\"text\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            <Search onClick={onclick} />\r\n          </Row>\r\n        </Row>\r\n      </Row>\r\n      <S.Wrapper isNull={temp.length === 0}>\r\n        <TableHeader>\r\n          <div>분류</div>\r\n          <div>추천</div>\r\n          <div>리뷰 내용</div>\r\n          <div>회원 번호</div>\r\n          <div>카페 번호</div>\r\n          <div>등록일</div>\r\n          <div>최종 수정일</div>\r\n          <div>메모</div>\r\n        </TableHeader>\r\n\r\n        <ReviewTemp\r\n          temp={temp}\r\n          onModal={onModal}\r\n          setMemoModal={setMemoModal}\r\n          setMemoId={setMemoId}\r\n          setSelectItem={setSelectItem2}\r\n        />\r\n      </S.Wrapper>\r\n\r\n      {memoModal && (\r\n        <MemoModal\r\n          memoId={memoId}\r\n          setModal={setMemoModal}\r\n          selectItem={selectItem2}\r\n        />\r\n      )}\r\n      {temp.length === 0 && <None text={\"리뷰\"} />}\r\n      {modal && <MReview setModal={setModal} selectItem2={selectItem2} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst TableHeader = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  width: 100%;\r\n  color: #8b8b8b;\r\n  text-align: center;\r\n  line-height: 42px;\r\n  border-bottom: 1px solid #515151;\r\n  & > div {\r\n    flex: 0.7;\r\n    border-right: 1px solid #515151;\r\n  }\r\n  & > div:nth-child(3) {\r\n    flex: 4;\r\n  }\r\n  & > div:nth-child(5) {\r\n    flex: 1.5;\r\n  }\r\n\r\n  & > div:last-child {\r\n    flex: 0.5;\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nexport default Review;\r\n","import axios from \"axios\";\r\nimport { withAuthInstance } from \"./index\";\r\n\r\nexport const reviewDataApi = async (page, sort) => {\r\n  return await withAuthInstance.get(`/reviews?page=${page}&sort=${sort}`);\r\n};\r\n\r\n//회원별\r\nexport const reviewUserDataApi = async (id) => {\r\n  return await withAuthInstance.get(`/members/${id}/reviews`);\r\n};\r\n\r\nexport const reviewDetailApi = async (id) => {\r\n  return await withAuthInstance.get(`/reviews/${id}`);\r\n};\r\n\r\nexport const reviewSearchApi = async (keyword, sub, page, sort) => {\r\n  return await withAuthInstance.get(\r\n    `/reviews?page=${page}&sort=${sort}&searchType=${sub}&keyword=${keyword}`\r\n  );\r\n};\r\n\r\nexport const reviewDelApi = async (id) => {\r\n  return await withAuthInstance.delete(`/reviews/${id}`);\r\n};\r\n\r\nexport const reviewReportApi = async (id, reportCId) => {\r\n  const data = { reviewId: id, reportCategoryId: reportCId };\r\n\r\n  return await withAuthInstance.post(`/reviews/${id}/reports`, data);\r\n};\r\n"],"names":["ReportReason","setModal","id","useState","selected","setSelected","report","setReport","onClick","TextBox","map","item","i","RItem","content","onSelect","isSelected","ModalFooter","color","text","text1","text2","text3","setAlert","func","reviewReportApi","then","res","window","alert","catch","err","location","reload","forFunc","styled","props","MReview","selectItem2","del","setDel","rReason","setRReason","slider","setSlider","Portal","height","Columnbox","Line","String","reviewId","padStart","writerId","nicknameOfWriter","visitCnt","storeId","storeName","regDateTime","replace","modDateTime","RecommendBox","recommendation","gap","align","style","margin","fontSize","width","num","detailEvaluation","wifi","socket","restroom","tableSize","Text","reviewImageDtoList","justify","Pic","src","process","imageUrl","alt","justifyContent","reviewDelApi","console","log","imgs","ItemRow","hasMemoId","temp","onModal","setSelectItem","setMemoModal","setMemoId","memoId","length","slice","split","TableHeader","sort","setSort","useNavigate","setTemp","search","setSearch","page","setPage","count","setCount","isDrop","setIsDrop","arr","setArr","modal","memoModal","setSelectItem2","sortData","searchData","reviewSearchApi","data","reviewResDtoList","dtoList","useEffect","reviewDataApi","reviewCnt","mcolor","subText","marginBottom","e","target","handlePageChange","ArrowDown","borderBottom","placeholder","type","value","onChange","Search","isNull","reviewDetailApi","selectItem","None","withAuthInstance","reviewUserDataApi","keyword","sub","reportCId","reportCategoryId"],"sourceRoot":""}