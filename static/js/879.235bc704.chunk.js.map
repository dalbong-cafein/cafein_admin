{"version":3,"file":"static/js/879.235bc704.chunk.js","mappings":"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","sources":["recoil/editcafe.js","pages/EditCafe.jsx"],"sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const editcafe = atom({\r\n  key: \"editcafe\",\r\n  default: {\r\n    storeId: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n    monOpen: null,\r\n    monClose: null,\r\n    tueOpen: null,\r\n    tueClose: null,\r\n    wedOpen: null,\r\n    wedClose: null,\r\n    thuOpen: null,\r\n    thuClose: null,\r\n    friOpen: null,\r\n    friClose: null,\r\n    satOpen: null,\r\n    satClose: null,\r\n    sunOpen: null,\r\n    sunClose: null,\r\n    wifiPassword: \"\",\r\n    etcTime: \"\",\r\n    deleteImageIdList: [],\r\n    updateImageFiles: [],\r\n  },\r\n});\r\n","import * as S from \"./regSt\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nimport { useRecoilState } from \"recoil\";\r\nimport { editcafe } from \"../recoil/editcafe\";\r\n\r\nimport { ReactComponent as Photo } from \"../svg/photo.svg\";\r\nimport { ReactComponent as CloseIcon } from \"../svg/close.svg\";\r\n\r\nimport PVImg from \"../components/common/PVImg\";\r\nimport SearchModal from \"../components/modal/SearchModal\";\r\nimport Row from \"../components/atoms/row\";\r\nimport Header from \"../components/common/Header\";\r\n\r\nimport { updateDay } from \"../hooks/registerHook\";\r\nimport { feedEditApi } from \"../util/management\";\r\nimport CafeTimeBox from \"../components/common/CafeTimeBox\";\r\nimport { resizeImg } from \"../constant/resizeImg\";\r\n\r\nconst Editcafe = () => {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState([]);\r\n  const [register, setRegister] = useRecoilState(editcafe);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loc, setLoc] = useState({ address_name: null });\r\n  const [searchModal, setSearchModal] = useState(false);\r\n  const [dayarr, setDayarr] = useState([]);\r\n  const [delImg, setDelImg] = useState([]);\r\n  const [updateImg, setUpdateImg] = useState([]);\r\n\r\n  const onLoadFile = async (e) => {\r\n    let copy = [...file];\r\n    if (copy.length >= 5) {\r\n      window.alert(\"이미지는 5개만 추가 가능합니다\");\r\n      return;\r\n    } else {\r\n      if (e.target.files[0]) {\r\n        const file = await resizeImg(e.target.files[0]);\r\n        copy.push(file);\r\n        setFile(copy);\r\n        let copy3 = [...updateImg];\r\n        copy3.push(file);\r\n        setUpdateImg(() => copy3);\r\n\r\n        const copy2 = { ...register };\r\n        copy2.updateImageFiles = copy3;\r\n        setRegister(() => copy2);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteImg = async (a, idx) => {\r\n    const copy = [...file];\r\n    const copy2 = { ...register };\r\n    let coppy = [...delImg];\r\n    const hasfile = await state.storeImageDtoList.filter((item) => item.imageUrl === a);\r\n    if (hasfile[0]) {\r\n      coppy.push(hasfile[0].imageId);\r\n    }\r\n    copy.splice(idx, 1);\r\n    copy2.deleteImageIdList = coppy;\r\n    setFile(copy);\r\n    setRegister(copy2);\r\n    setDelImg(coppy);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const name = e.target.name;\r\n    const copy = { ...register };\r\n    copy[name] = e.target.value;\r\n    setRegister(copy);\r\n  };\r\n\r\n  const convertDay = (j) => {\r\n    if (j === \"onMon\") return \"월\";\r\n    if (j === \"onTue\") return \"화\";\r\n    if (j === \"onWed\") return \"수\";\r\n    if (j === \"onThu\") return \"목\";\r\n    if (j === \"onFri\") return \"금\";\r\n    if (j === \"onSat\") return \"토\";\r\n    if (j === \"onSun\") return \"일\";\r\n  };\r\n  const input = useRef();\r\n\r\n  const submit = async () => {\r\n    feedEditApi(register)\r\n      .then((res) => {\r\n        console.log(res);\r\n        navigate(\"/management\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // window.alert(\"조금 이따가 다시 시도해주세요\");\r\n        // navigate(\"/management\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchingData = async () => {\r\n      const copy = { ...register };\r\n      copy.storeId = state.storeId;\r\n      const obj = Object.keys(register);\r\n      for (let key of obj) {\r\n        copy[key] = state[key];\r\n      }\r\n      setRegister(copy);\r\n    };\r\n\r\n    const fetching = async () => {\r\n      const obj = Object.keys(state.businessHoursResDto);\r\n      const copy = [...dayarr];\r\n      const copy2 = { ...register };\r\n      obj?.map((item, i) => {\r\n        if (state?.businessHoursResDto) {\r\n          if (item !== \"etcTime\") {\r\n            const day = convertDay(item);\r\n            const open = state.businessHoursResDto[item].open || null;\r\n            const close = state.businessHoursResDto[item].closed || null;\r\n            copy.push([open, close, day]);\r\n            updateDay(day, copy2, open, close);\r\n          }\r\n        }\r\n      });\r\n\r\n      setDayarr(copy);\r\n      setRegister(copy2);\r\n    };\r\n    const fetchingImg = async () => {\r\n      const copy = [...file];\r\n      if (state.storeImageDtoList) {\r\n        for (let i = 0; i < state.storeImageDtoList.length; i++) {\r\n          copy.push(state.storeImageDtoList[i].imageUrl);\r\n        }\r\n      }\r\n      setFile(copy);\r\n    };\r\n    if (state) {\r\n      fetching();\r\n      fetchingImg();\r\n      fetchingData();\r\n    }\r\n  }, [state]);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        halfWidth\r\n        align=\"center\"\r\n        mcolor=\"#8B8B8B\"\r\n        text=\"카페 관리\"\r\n        inner=\"카페 상세 수정\"\r\n        btn={false}\r\n      >\r\n        <S.Submit onClick={() => window.history.back()}>취소</S.Submit>\r\n        <S.Submit\r\n          isFill={\r\n            !register.storeName &&\r\n            !register.siNm &&\r\n            !register.recommendation &&\r\n            !register.wifi &&\r\n            !register.restroom &&\r\n            !register.tableSize &&\r\n            !register.socket\r\n          }\r\n          onClick={submit}\r\n        >\r\n          등록\r\n        </S.Submit>\r\n      </Header>\r\n      <S.Containaer>\r\n        <S.Column>\r\n          <S.InputBox>\r\n            <span>카페명</span>\r\n            <div>{state.storeName}</div>\r\n          </S.InputBox>\r\n          <S.InputBox>\r\n            <span>주소</span>\r\n            <div>{loc.address_name || state.address.fullAddress} </div>\r\n          </S.InputBox>\r\n          <S.Box height={168}>\r\n            <p>장소 사진</p>\r\n            <S.PhotoBox>\r\n              <S.FileUpload\r\n                onClick={() => {\r\n                  input.current?.click();\r\n                }}\r\n              >\r\n                <Photo />\r\n                <div>{file.length}/5</div>\r\n                <input\r\n                  ref={input}\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  onChange={(e) => onLoadFile(e)}\r\n                />\r\n              </S.FileUpload>\r\n              {file?.map((a, idx) => {\r\n                return (\r\n                  <S.ImgBox key={idx}>\r\n                    <CloseIcon name={a.name} onClick={() => deleteImg(a, idx)} />\r\n                    <PVImg img={a} />\r\n                  </S.ImgBox>\r\n                );\r\n              })}\r\n            </S.PhotoBox>\r\n          </S.Box>\r\n          <CafeTimeBox\r\n            dayarr={dayarr}\r\n            setDayarr={setDayarr}\r\n            register={register}\r\n            setRegister={setRegister}\r\n            isEdit\r\n          />\r\n          <S.InputBox>\r\n            <span>기타 운영 시간</span>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ex. 매달 첫째주 수요일\"\r\n              name=\"etcTime\"\r\n              defaultValue={state?.businessHoursResDto?.etcTime}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </S.InputBox>\r\n          <S.InputBox>\r\n            <span>전화번호</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              defaultValue={loc?.phone || state.phone}\r\n              onChange={(e) => onChange(e)}\r\n              placeholder=\"카페 전화번호를 입력해주세요\"\r\n            />\r\n          </S.InputBox>\r\n          <S.InputBox>\r\n            <span>웹사이트</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"website\"\r\n              defaultValue={state.website}\r\n              onChange={(e) => onChange(e)}\r\n              placeholder=\"카페 홈페이지 또는 인스타그램 주소를 입력해주세요\"\r\n            />\r\n          </S.InputBox>\r\n          <S.InputBox>\r\n            <span>와이파이 비밀번호</span>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"와이파이 비밀번호를 입력해 주세요\"\r\n              name=\"wifiPassword\"\r\n              defaultValue={state.wifiPassword}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </S.InputBox>\r\n        </S.Column>\r\n      </S.Containaer>\r\n      {searchModal && (\r\n        <SearchModal\r\n          setModal={setSearchModal}\r\n          search={search}\r\n          setSearch={setSearch}\r\n          setLoc={setLoc}\r\n          setRegister={setRegister}\r\n          register={register}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Editcafe;\r\n"],"names":["editcafe","atom","key","default","storeId","phone","website","monOpen","monClose","tueOpen","tueClose","wedOpen","wedClose","thuOpen","thuClose","friOpen","friClose","satOpen","satClose","sunOpen","sunClose","wifiPassword","etcTime","deleteImageIdList","updateImageFiles","state","useLocation","navigate","useNavigate","useState","file","setFile","useRecoilState","register","setRegister","search","setSearch","address_name","loc","setLoc","searchModal","setSearchModal","dayarr","setDayarr","delImg","setDelImg","updateImg","setUpdateImg","onLoadFile","e","copy","length","window","alert","target","files","resizeImg","push","copy3","copy2","deleteImg","a","idx","coppy","storeImageDtoList","filter","item","imageUrl","hasfile","imageId","splice","onChange","name","value","input","useRef","submit","feedEditApi","then","res","console","log","catch","err","useEffect","fetchingData","obj","Object","keys","fetching","businessHoursResDto","map","i","day","j","open","close","closed","updateDay","fetchingImg","Header","halfWidth","align","mcolor","text","inner","btn","onClick","history","back","isFill","storeName","siNm","recommendation","wifi","restroom","tableSize","socket","address","fullAddress","height","current","click","ref","type","accept","style","display","PVImg","img","CafeTimeBox","isEdit","placeholder","defaultValue","SearchModal","setModal"],"sourceRoot":""}