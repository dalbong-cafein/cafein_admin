{"version":3,"file":"static/js/831.080d908e.chunk.js","mappings":"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","sources":["pages/Notice.jsx","util/desh.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\n\nimport * as S from \"./style copy\";\nimport * as SS from \"../components/noticesStyle\";\nimport SelectHeader from \"../components/common/SelectHeader\";\nimport NoticePreview from \"../components/modal/NoticePreview\";\nimport RedAlert from \"../components/modal/RedAlert\";\nimport NoticeDetailModal from \"../components/modal/NoticeDetailModal\";\nimport Alert from \"../components/modal/Alert\";\nimport FilterRow from \"../components/common/FilterRow\";\n\nimport None from \"../components/common/None\";\nimport { adminFeedListApi } from \"../util/desh\";\n\nimport { useRecoilState } from \"recoil\";\nimport { registerNotice } from \"../recoil/NNotice\";\nimport { postDelApi, registerNoticeApi } from \"../util/events\";\n\nimport usePagination from \"../hooks/usePagination\";\nimport RegNoticeBox from \"../components/RegNoticeBox\";\n\nconst Notice = () => {\n  const [data, setData] = useState([]);\n  const [selectItem, setSelectItem] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n  const [register, setRegister] = useRecoilState(registerNotice);\n  const [preview, setPreview] = useState(false);\n\n  // pagination\n  const [page, sort, item, count, setCount, setPage, onDesc, onAsc] = usePagination(10);\n  const [alert, setAlert] = useState(false);\n  const [Dalert, setDAlert] = useState(false);\n  const [modal, setModal] = useState(false);\n\n  const onSubmit = (register) => {\n    registerNoticeApi(register)\n      .then((res) => {\n        setAlert(false);\n        window.location.reload();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onDel = () => {\n    postDelApi(selectItem.boardId)\n      .then((res) => {\n        window.location.reload();\n      })\n      .catch((err) => console.log(err));\n  };\n  const searchData = () => {\n    adminFeedListApi(search, page, sort)\n      .then((res) => {\n        setCount(res.data.data.boardCnt);\n        setData(res.data.data.boardResDtoList.dtoList);\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(() => {\n    const copy = { ...register };\n    copy.boardCategoryId = 1;\n    setRegister(copy);\n    adminFeedListApi(page, sort, search).then((res) => {\n      setCount(res.data.data.boardCnt);\n      setData(res.data.data.boardResDtoList.dtoList);\n    });\n  }, [sort, page]);\n  return (\n    <>\n      <SelectHeader\n        menu=\"notice\"\n        menu1=\"notice\"\n        menu2=\"qna\"\n        Tmenu1=\"공지사항\"\n        Tmenu2=\"자주 묻는 질문\"\n        menu3=\"report\"\n        Tmenu3=\"신고\"\n      />\n      <SS.Container>\n        <div>\n          <FilterRow\n            sort={sort}\n            count={count}\n            page={page}\n            item={item}\n            onAsc={onAsc}\n            onDesc={onDesc}\n            setPage={setPage}\n            search={search}\n            setSearch={setSearch}\n            searchData={searchData}\n            nodrop\n          />\n          <S.Wrapper isNull={data.length === 0}>\n            <TableHeader>\n              <div>분류</div>\n              <div>제목</div>\n              <div>등록일</div>\n            </TableHeader>\n            <S.DataBox>\n              {data &&\n                data.map((item, i) => (\n                  <ItemRow\n                    key={i}\n                    onClick={() => {\n                      setModal(true);\n                      setSelectItem(item);\n                    }}\n                  >\n                    <div>{String(item.boardId).padStart(6, \"0\")}</div>\n                    <div>\n                      <p\n                        style={{\n                          fontWeight: \"bold\",\n                          marginBottom: \"5px\",\n                          width: '\"350px\"',\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                          whiteSpace: \"nowrap\",\n                          textAlign: \"left\",\n                        }}\n                      >\n                        {item.title}\n                      </p>\n                      <p\n                        style={{\n                          width: \"350px\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                          whiteSpace: \"nowrap\",\n                          textAlign: \"left\",\n                        }}\n                      >\n                        {item.content}\n                      </p>\n                    </div>\n\n                    <div>{String(item.regDateTime).split(\"T\")[0]}</div>\n                  </ItemRow>\n                ))}\n            </S.DataBox>\n          </S.Wrapper>\n          {data.length == 0 && <None text=\"공지사항\" />}\n        </div>\n        <RegNoticeBox\n          register={register}\n          setRegister={setRegister}\n          setPreview={setPreview}\n          setAlert={setAlert}\n        />\n      </SS.Container>\n      {alert && (\n        <Alert\n          setAlert={setAlert}\n          text=\"공지사항 등록\"\n          subtext=\"게시물을 등록하시겠습니까?\"\n          func={onSubmit}\n          forFunc={register}\n        />\n      )}\n\n      {preview && (\n        <NoticePreview\n          item={register}\n          setModal={setPreview}\n          file={register.imageFiles}\n          menu=\"notice\"\n        />\n      )}\n      {modal && (\n        <NoticeDetailModal\n          selectItem={selectItem}\n          setModal={setModal}\n          menu=\"notice\"\n          setAlert={setDAlert}\n        />\n      )}\n      {Dalert && (\n        <RedAlert\n          text=\"공지사항 삭제\"\n          text1=\"공지사항을 \"\n          text2=\"삭제\"\n          text3=\"하시겠습니까?\"\n          setAlert={setDAlert}\n          func={onDel}\n          forFunc={null}\n        />\n      )}\n    </>\n  );\n};\n\nconst TableHeader = styled.div`\n  font-size: 14px;\n  display: flex;\n  width: 100%;\n  color: #8b8b8b;\n  text-align: center;\n  line-height: 42px;\n  border-bottom: 1px solid #515151;\n  & > div {\n    flex: 0.5;\n    border-right: 1px solid #515151;\n  }\n  & div:nth-child(2) {\n    flex: 2.5;\n  }\n\n  & > div:last-child {\n    flex: 1;\n    border-right: none;\n  }\n`;\n\nconst ItemRow = styled.div`\n  display: flex;\n  color: #e3e3e3;\n  height: calc(65vh / 9);\n  cursor: pointer;\n  border-bottom: 1px solid #515151;\n  font-size: 14px;\n  & > div {\n    // padding: 0 0 0 16px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: left;\n    line-height: 18px;\n    box-sizing: border-box;\n    flex: 0.5;\n    border-right: 1px solid #515151;\n  }\n\n  & div:nth-child(2) {\n    flex: 2.5;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    & > p {\n      margin: 0 0 0 16px;\n    }\n  }\n\n  & > div:last-child {\n    flex: 1;\n    border-right: none;\n    border-bottom: none;\n  }\n`;\n\nexport default Notice;\n","import { withAuthInstance } from \"./index\";\n\nexport const adminFeedListApi = async (page, sort, search) => {\n  return await withAuthInstance.get(\n    `/boards?page=${page}&sort=${sort}${search && `&keyword=${search}`}`\n  );\n};\nexport const adminFeedListForEventApi = async (page, sort, search) => {\n  return await withAuthInstance.get(\n    `/boards?size=4&page=${page}&sort=${sort}${search && `&keyword=${search}`}`\n  );\n};\n\n//오늘 새 데이터 추가\nexport const deshDataApi = async () => {\n  return await withAuthInstance.get(\"/register-data\");\n};\n\nexport const marketingDListApi = async () => {\n  return await withAuthInstance.get(`/coupons/limit?limit=4`);\n};\n\nexport const reportDListApi = async () => {\n  return await withAuthInstance.get(`/reports/limit?limit=4`);\n};\n"],"names":["TableHeader","styled","ItemRow","useState","data","setData","selectItem","setSelectItem","search","setSearch","useRecoilState","registerNotice","register","setRegister","preview","setPreview","usePagination","page","sort","item","count","setCount","setPage","onDesc","onAsc","alert","setAlert","Dalert","setDAlert","modal","setModal","useEffect","copy","boardCategoryId","adminFeedListApi","then","res","boardCnt","boardResDtoList","dtoList","menu","menu1","menu2","Tmenu1","Tmenu2","menu3","Tmenu3","searchData","catch","err","console","log","nodrop","isNull","length","map","i","onClick","String","boardId","padStart","style","fontWeight","marginBottom","width","overflow","textOverflow","whiteSpace","textAlign","title","content","regDateTime","split","text","subtext","func","registerNoticeApi","window","location","reload","forFunc","file","imageFiles","text1","text2","text3","postDelApi","withAuthInstance","adminFeedListForEventApi","deshDataApi","marketingDListApi","reportDListApi"],"sourceRoot":""}