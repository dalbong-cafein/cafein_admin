{"version":3,"file":"static/js/879.8e78b819.chunk.js","mappings":"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","sources":["recoil/editcafe.js","pages/EditCafe.jsx"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const editcafe = atom({\n  key: \"editcafe\",\n  default: {\n    storeId: \"\",\n    phone: \"\",\n    website: \"\",\n    monOpen: null,\n    monClose: null,\n    tueOpen: null,\n    tueClose: null,\n    wedOpen: null,\n    wedClose: null,\n    thuOpen: null,\n    thuClose: null,\n    friOpen: null,\n    friClose: null,\n    satOpen: null,\n    satClose: null,\n    sunOpen: null,\n    sunClose: null,\n    wifiPassword: \"\",\n    etcTime: \"\",\n    deleteImageIdList: [],\n    updateImageFiles: [],\n  },\n});\n","import * as S from \"./regSt\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport { useRecoilState } from \"recoil\";\nimport { editcafe } from \"../recoil/editcafe\";\n\nimport { ReactComponent as Photo } from \"../svg/photo.svg\";\nimport { ReactComponent as CloseIcon } from \"../svg/close.svg\";\n\nimport PVImg from \"../components/common/PVImg\";\nimport SearchModal from \"../components/modal/SearchModal\";\nimport Row from \"../components/atoms/row\";\nimport Header from \"../components/common/Header\";\n\nimport { updateDay } from \"../hooks/registerHook\";\nimport { feedEditApi } from \"../util/management\";\nimport CafeTimeBox from \"../components/common/CafeTimeBox\";\nimport { resizeImg } from \"../constant/resizeImg\";\n\nconst Editcafe = () => {\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const [file, setFile] = useState([]);\n  const [register, setRegister] = useRecoilState(editcafe);\n  const [search, setSearch] = useState(\"\");\n  const [loc, setLoc] = useState({ address_name: null });\n  const [searchModal, setSearchModal] = useState(false);\n  const [dayarr, setDayarr] = useState([]);\n  const [delImg, setDelImg] = useState([]);\n  const [updateImg, setUpdateImg] = useState([]);\n\n  const onLoadFile = async (e) => {\n    let copy = [...file];\n    if (copy.length >= 5) {\n      window.alert(\"이미지는 5개만 추가 가능합니다\");\n      return;\n    } else {\n      if (e.target.files[0]) {\n        const file = await resizeImg(e.target.files[0]);\n        copy.push(file);\n        setFile(copy);\n        let copy3 = [...updateImg];\n        copy3.push(file);\n        setUpdateImg(() => copy3);\n\n        const copy2 = { ...register };\n        copy2.updateImageFiles = copy3;\n        setRegister(() => copy2);\n      }\n    }\n  };\n\n  const deleteImg = async (a, idx) => {\n    const copy = [...file];\n    const copy2 = { ...register };\n    let coppy = [...delImg];\n    const hasfile = await state.storeImageDtoList.filter((item) => item.imageUrl === a);\n    if (hasfile[0]) {\n      coppy.push(hasfile[0].imageId);\n    }\n    copy.splice(idx, 1);\n    copy2.deleteImageIdList = coppy;\n    setFile(copy);\n    setRegister(copy2);\n    setDelImg(coppy);\n  };\n\n  const onChange = (e) => {\n    const name = e.target.name;\n    const copy = { ...register };\n    copy[name] = e.target.value;\n    setRegister(copy);\n  };\n\n  const convertDay = (j) => {\n    if (j === \"onMon\") return \"월\";\n    if (j === \"onTue\") return \"화\";\n    if (j === \"onWed\") return \"수\";\n    if (j === \"onThu\") return \"목\";\n    if (j === \"onFri\") return \"금\";\n    if (j === \"onSat\") return \"토\";\n    if (j === \"onSun\") return \"일\";\n  };\n  const input = useRef();\n\n  const submit = async () => {\n    feedEditApi(register)\n      .then((res) => {\n        console.log(res);\n        navigate(\"/management\");\n      })\n      .catch((err) => {\n        console.log(err);\n        // window.alert(\"조금 이따가 다시 시도해주세요\");\n        // navigate(\"/management\");\n      });\n  };\n\n  useEffect(() => {\n    const fetchingData = async () => {\n      const copy = { ...register };\n      copy.storeId = state.storeId;\n      const obj = Object.keys(register);\n      for (let key of obj) {\n        copy[key] = state[key];\n      }\n      setRegister(copy);\n    };\n\n    const fetching = async () => {\n      const obj = Object.keys(state.businessHoursResDto);\n      const copy = [...dayarr];\n      const copy2 = { ...register };\n      obj?.map((item, i) => {\n        if (state?.businessHoursResDto) {\n          if (item !== \"etcTime\") {\n            const day = convertDay(item);\n            const open = state.businessHoursResDto[item].open || null;\n            const close = state.businessHoursResDto[item].closed || null;\n            copy.push([open, close, day]);\n            updateDay(day, copy2, open, close);\n          }\n        }\n      });\n\n      setDayarr(copy);\n      setRegister(copy2);\n    };\n    const fetchingImg = async () => {\n      const copy = [...file];\n      if (state.storeImageDtoList) {\n        for (let i = 0; i < state.storeImageDtoList.length; i++) {\n          copy.push(state.storeImageDtoList[i].imageUrl);\n        }\n      }\n      setFile(copy);\n    };\n    if (state) {\n      fetching();\n      fetchingImg();\n      fetchingData();\n    }\n  }, [state]);\n\n  return (\n    <>\n      <Header\n        halfWidth\n        align=\"center\"\n        mcolor=\"#8B8B8B\"\n        text=\"카페 관리\"\n        inner=\"카페 상세 수정\"\n        btn={false}\n      >\n        <S.Submit onClick={() => window.history.back()}>취소</S.Submit>\n        <S.Submit\n          isFill={\n            !register.storeName &&\n            !register.siNm &&\n            !register.recommendation &&\n            !register.wifi &&\n            !register.restroom &&\n            !register.tableSize &&\n            !register.socket\n          }\n          onClick={submit}\n        >\n          등록\n        </S.Submit>\n      </Header>\n      <S.Containaer>\n        <S.Column>\n          <S.InputBox>\n            <span>카페명</span>\n            <div>{state.storeName}</div>\n          </S.InputBox>\n          <S.InputBox>\n            <span>주소</span>\n            <div>{loc.address_name || state.address.fullAddress} </div>\n          </S.InputBox>\n          <S.Box height={168}>\n            <p>장소 사진</p>\n            <S.PhotoBox>\n              <S.FileUpload\n                onClick={() => {\n                  input.current?.click();\n                }}\n              >\n                <Photo />\n                <div>{file.length}/5</div>\n                <input\n                  ref={input}\n                  type=\"file\"\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                  onChange={(e) => onLoadFile(e)}\n                />\n              </S.FileUpload>\n              {file?.map((a, idx) => {\n                return (\n                  <S.ImgBox key={idx}>\n                    <CloseIcon name={a.name} onClick={() => deleteImg(a, idx)} />\n                    <PVImg img={a} />\n                  </S.ImgBox>\n                );\n              })}\n            </S.PhotoBox>\n          </S.Box>\n          <CafeTimeBox\n            dayarr={dayarr}\n            setDayarr={setDayarr}\n            register={register}\n            setRegister={setRegister}\n            isEdit\n          />\n          <S.InputBox>\n            <span>기타 운영 시간</span>\n            <input\n              type=\"text\"\n              placeholder=\"Ex. 매달 첫째주 수요일\"\n              name=\"etcTime\"\n              defaultValue={state?.businessHoursResDto?.etcTime}\n              onChange={(e) => onChange(e)}\n            />\n          </S.InputBox>\n          <S.InputBox>\n            <span>전화번호</span>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              defaultValue={loc?.phone || state.phone}\n              onChange={(e) => onChange(e)}\n              placeholder=\"카페 전화번호를 입력해주세요\"\n            />\n          </S.InputBox>\n          <S.InputBox>\n            <span>웹사이트</span>\n            <input\n              type=\"text\"\n              name=\"website\"\n              defaultValue={state.website}\n              onChange={(e) => onChange(e)}\n              placeholder=\"카페 홈페이지 또는 인스타그램 주소를 입력해주세요\"\n            />\n          </S.InputBox>\n          <S.InputBox>\n            <span>와이파이 비밀번호</span>\n            <input\n              type=\"text\"\n              placeholder=\"와이파이 비밀번호를 입력해 주세요\"\n              name=\"wifiPassword\"\n              defaultValue={state.wifiPassword}\n              onChange={(e) => onChange(e)}\n            />\n          </S.InputBox>\n        </S.Column>\n      </S.Containaer>\n      {searchModal && (\n        <SearchModal\n          setModal={setSearchModal}\n          search={search}\n          setSearch={setSearch}\n          setLoc={setLoc}\n          setRegister={setRegister}\n          register={register}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Editcafe;\n"],"names":["editcafe","atom","key","default","storeId","phone","website","monOpen","monClose","tueOpen","tueClose","wedOpen","wedClose","thuOpen","thuClose","friOpen","friClose","satOpen","satClose","sunOpen","sunClose","wifiPassword","etcTime","deleteImageIdList","updateImageFiles","state","useLocation","navigate","useNavigate","useState","file","setFile","useRecoilState","register","setRegister","search","setSearch","address_name","loc","setLoc","searchModal","setSearchModal","dayarr","setDayarr","delImg","setDelImg","updateImg","setUpdateImg","onLoadFile","e","copy","length","window","alert","target","files","resizeImg","push","copy3","copy2","deleteImg","a","idx","coppy","storeImageDtoList","filter","item","imageUrl","hasfile","imageId","splice","onChange","name","value","input","useRef","submit","feedEditApi","then","res","console","log","catch","err","useEffect","fetchingData","obj","Object","keys","fetching","businessHoursResDto","map","i","day","j","open","close","closed","updateDay","fetchingImg","Header","halfWidth","align","mcolor","text","inner","btn","onClick","history","back","isFill","storeName","siNm","recommendation","wifi","restroom","tableSize","socket","address","fullAddress","height","current","click","ref","type","accept","style","display","PVImg","img","CafeTimeBox","isEdit","placeholder","defaultValue","SearchModal","setModal"],"sourceRoot":""}