{"version":3,"file":"static/js/487.18ec1e06.chunk.js","mappings":"gUAiMMA,EAAcC,EAAAA,GAAAA,IAAH,8WAsBXC,EAAUD,EAAAA,GAAAA,IAAH,4rBAqCb,UAxOa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEA,GAAoEC,EAAAA,EAAAA,KAApE,eAAOC,EAAP,KAAaC,EAAb,KAAmBC,EAAnB,KAAyBC,EAAzB,KAAgCC,EAAhC,KAA0CC,EAA1C,KAAmDC,EAAnD,KAA2DC,EAA3D,KAEA,GAA0Bb,EAAAA,EAAAA,WAAS,GAAnC,eAAOc,EAAP,KAAcC,EAAd,KACA,GAA0Bf,EAAAA,EAAAA,WAAS,GAAnC,eAAOgB,EAAP,KAAcC,EAAd,KACA,GAA4BjB,EAAAA,EAAAA,WAAS,GAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAAoCnB,EAAAA,EAAAA,UAAS,IAA7C,eAAOoB,EAAP,KAAmBC,EAAnB,KAEA,IAA8BrB,EAAAA,EAAAA,WAAS,GAAvC,iBAAOsB,GAAP,MAAgBC,GAAhB,MACA,IAAgCC,EAAAA,EAAAA,IAAeC,EAAAA,GAA/C,iBAAOC,GAAP,MAAiBC,GAAjB,MAsCA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,GAAI,UAAQH,IAClBG,EAAKC,gBAAkB,EACvBH,GAAYE,IACZE,EAAAA,EAAAA,IAAa5B,EAAQG,EAAMC,GAAMyB,MAAK,SAACC,GACrCvB,EAASuB,EAAIhC,KAAKA,KAAKiC,UACvBhC,EAAQ+B,EAAIhC,KAAKA,KAAKkC,gBAAgBC,cAEvC,CAAC7B,EAAMD,KAGR,iCACE,SAAC,IAAD,CACE+B,KAAK,MACLC,MAAM,SACNC,MAAM,MACNC,OAAO,2BACPC,OAAO,yCACPC,MAAM,SACNC,OAAO,kBAET,UAAC,KAAD,YACE,4BACE,SAAC,IAAD,CACEpC,KAAMA,EACNE,MAAOA,EACPH,KAAMA,EACNE,KAAMA,EACNK,MAAOA,EACPD,OAAQA,EACRD,QAASA,EACTR,OAAQA,EACRC,UAAWA,EACXwC,WA1CS,YACjBb,EAAAA,EAAAA,IAAa5B,EAAQG,EAAMC,GACxByB,MAAK,SAACC,GACLvB,EAASuB,EAAIhC,KAAKA,KAAKiC,UACvBhC,EAAQ+B,EAAIhC,KAAKA,KAAKkC,gBAAgBC,YAEvCS,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAqCtBG,QAAM,KAER,UAAC,KAAD,CAAWC,OAAwB,IAAhBjD,EAAKkD,OAAxB,WACE,UAACtD,EAAD,YACE,2CACA,2CACA,mDAEDI,EAAKmD,KAAI,SAAC5C,EAAM6C,GAAP,OACR,UAACtD,EAAD,CAEEuD,QAAS,WACPrC,GAAS,GACTI,EAAcb,IAJlB,WAOE,yBAAM+C,OAAO/C,EAAKgD,SAASC,SAAS,EAAG,QACvC,4BACE,cACEC,MAAO,CACLC,WAAY,OACZC,aAAc,MACdC,MAAO,QACPC,SAAU,SACVC,aAAc,WACdC,WAAY,SACZC,UAAW,QARf,SAWGzD,EAAK0D,SAER,cACER,MAAO,CACLG,MAAO,QACPC,SAAU,SACVC,aAAc,WACdC,WAAY,SACZC,UAAW,QANf,SASGzD,EAAK2D,cAIV,yBAAMZ,OAAO/C,EAAK4D,aAAaC,MAAM,KAAK,OAlCrChB,SAsCK,GAAfpD,EAAKkD,SAAe,SAAC,IAAD,CAAMmB,KAAK,YAElC,SAAC,IAAD,CACE5C,SAAUA,GACVC,YAAaA,GACbJ,WAAYA,GACZR,SAAUA,EACVmD,MAAM,kEAGTpD,IACC,SAAC,IAAD,CACEC,SAAUA,EACVuD,KAAK,sDACLC,QAAQ,6EACRC,KA3HS,SAAC9C,IAChB+C,EAAAA,EAAAA,IAAkB/C,GACfM,MAAK,SAACC,GACLlB,GAAS,GACT2D,OAAOC,SAASC,YAEjB/B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAsHxB+B,QAASnD,KAGZJ,KACC,SAAC,IAAD,CACEd,KAAMkB,GACNT,SAAUM,GACVuD,KAAMpD,GAASqD,WACf1C,KAAK,QAGRrB,IACC,SAAC,IAAD,CACEI,WAAYA,EACZH,SAAUA,EACVoB,KAAK,MACLtB,SAAUI,IAGbD,IACC,SAAC,IAAD,CACEoD,KAAK,sDACLU,MAAM,gDACNC,MAAM,eACNC,MAAM,wCACNnE,SAAUI,EACVqD,KA7IM,YACZW,EAAAA,EAAAA,IAAW/D,EAAWoC,SACnBxB,MAAK,SAACC,GACLyC,OAAOC,SAASC,YAEjB/B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAyIxB+B,QAAS","sources":["pages/QnA.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\n\nimport * as S from \"./style copy\";\nimport * as SS from \"../components/noticesStyle\";\n\nimport SelectHeader from \"../components/common/SelectHeader\";\n\nimport { registerNotice } from \"../recoil/NNotice\";\nimport { postDelApi, registerNoticeApi, eventListApi } from \"../util/events\";\nimport { useRecoilState } from \"recoil\";\nimport Alert from \"../components/modal/Alert\";\nimport None from \"../components/common/None\";\nimport NoticePreview from \"../components/modal/NoticePreview\";\nimport RedAlert from \"../components/modal/RedAlert\";\nimport NoticeDetailModal from \"../components/modal/NoticeDetailModal\";\nimport usePagination from \"../hooks/usePagination\";\nimport FilterRow from \"../components/common/FilterRow\";\nimport RegNoticeBox from \"../components/RegNoticeBox\";\n\nconst QnAs = () => {\n  const [data, setData] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n  // pagination\n  const [page, sort, item, count, setCount, setPage, onDesc, onAsc] = usePagination();\n\n  const [alert, setAlert] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [Dalert, setDAlert] = useState(false);\n  const [selectItem, setSelectItem] = useState([]);\n\n  const [preview, setPreview] = useState(false);\n  const [register, setRegister] = useRecoilState(registerNotice);\n\n  const onSubmit = (register) => {\n    registerNoticeApi(register)\n      .then((res) => {\n        setAlert(false);\n        window.location.reload();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onDel = () => {\n    postDelApi(selectItem.boardId)\n      .then((res) => {\n        window.location.reload();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const searchData = () => {\n    eventListApi(search, page, sort)\n      .then((res) => {\n        setCount(res.data.data.boardCnt);\n        setData(res.data.data.boardResDtoList.dtoList);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    const copy = { ...register };\n    copy.boardCategoryId = 2;\n    setRegister(copy);\n    eventListApi(search, page, sort).then((res) => {\n      setCount(res.data.data.boardCnt);\n      setData(res.data.data.boardResDtoList.dtoList);\n    });\n  }, [sort, page]);\n\n  return (\n    <>\n      <SelectHeader\n        menu=\"qna\"\n        menu1=\"notice\"\n        menu2=\"qna\"\n        Tmenu1=\"공지사항\"\n        Tmenu2=\"자주 묻는 질문\"\n        menu3=\"report\"\n        Tmenu3=\"신고\"\n      />\n      <SS.Container>\n        <div>\n          <FilterRow\n            sort={sort}\n            count={count}\n            page={page}\n            item={item}\n            onAsc={onAsc}\n            onDesc={onDesc}\n            setPage={setPage}\n            search={search}\n            setSearch={setSearch}\n            searchData={searchData}\n            nodrop\n          />\n          <S.Wrapper isNull={data.length === 0}>\n            <TableHeader>\n              <div>분류</div>\n              <div>제목</div>\n              <div>등록일</div>\n            </TableHeader>\n            {data.map((item, i) => (\n              <ItemRow\n                key={i}\n                onClick={() => {\n                  setModal(true);\n                  setSelectItem(item);\n                }}\n              >\n                <div>{String(item.boardId).padStart(6, \"0\")}</div>\n                <div>\n                  <p\n                    style={{\n                      fontWeight: \"bold\",\n                      marginBottom: \"5px\",\n                      width: \"350px\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                      whiteSpace: \"nowrap\",\n                      textAlign: \"left\",\n                    }}\n                  >\n                    {item.title}\n                  </p>\n                  <p\n                    style={{\n                      width: \"350px\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                      whiteSpace: \"nowrap\",\n                      textAlign: \"left\",\n                    }}\n                  >\n                    {item.content}\n                  </p>\n                </div>\n\n                <div>{String(item.regDateTime).split(\"T\")[0]}</div>\n              </ItemRow>\n            ))}\n          </S.Wrapper>\n          {data.length == 0 && <None text=\"QnA\" />}\n        </div>\n        <RegNoticeBox\n          register={register}\n          setRegister={setRegister}\n          setPreview={setPreview}\n          setAlert={setAlert}\n          title=\"새 자주 묻는 질문 등록\"\n        />\n      </SS.Container>\n      {alert && (\n        <Alert\n          setAlert={setAlert}\n          text=\"자주 묻는 질문 등록\"\n          subtext=\"게시물을 등록하시겠습니까?\"\n          func={onSubmit}\n          forFunc={register}\n        />\n      )}\n      {preview && (\n        <NoticePreview\n          item={register}\n          setModal={setPreview}\n          file={register.imageFiles}\n          menu=\"QnA\"\n        />\n      )}\n      {modal && (\n        <NoticeDetailModal\n          selectItem={selectItem}\n          setModal={setModal}\n          menu=\"QnA\"\n          setAlert={setDAlert}\n        />\n      )}\n      {Dalert && (\n        <RedAlert\n          text=\"자주 묻는 질문 삭제\"\n          text1=\"자주 묻는 질문을 \"\n          text2=\"삭제\"\n          text3=\"하시겠습니까?\"\n          setAlert={setDAlert}\n          func={onDel}\n          forFunc={null}\n        />\n      )}\n    </>\n  );\n};\n\nconst TableHeader = styled.div`\n  font-size: 14px;\n  display: flex;\n  width: 100%;\n  color: #8b8b8b;\n  text-align: center;\n  line-height: 42px;\n  border-bottom: 1px solid #515151;\n  & > div {\n    flex: 0.5;\n    border-right: 1px solid #515151;\n  }\n  & div:nth-child(2) {\n    flex: 2.5;\n  }\n\n  & > div:last-child {\n    flex: 1;\n    border-right: none;\n  }\n`;\n\nconst ItemRow = styled.div`\n  display: flex;\n  color: #e3e3e3;\n  height: calc(65vh / 9);\n  cursor: pointer;\n  font-size: 14px;\n  border-bottom: 1px solid #515151;\n  & > div {\n    // padding: 0 0 0 16px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: left;\n    line-height: 18px;\n    box-sizing: border-box;\n    flex: 0.5;\n    border-right: 1px solid #515151;\n  }\n\n  & div:nth-child(2) {\n    flex: 2.5;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    & > p {\n      margin: 0 0 0 16px;\n    }\n  }\n\n  & > div:last-child {\n    flex: 1;\n    border-right: none;\n    border-bottom: none;\n  }\n`;\n\nexport default QnAs;\n"],"names":["TableHeader","styled","ItemRow","useState","data","setData","search","setSearch","usePagination","page","sort","item","count","setCount","setPage","onDesc","onAsc","alert","setAlert","modal","setModal","Dalert","setDAlert","selectItem","setSelectItem","preview","setPreview","useRecoilState","registerNotice","register","setRegister","useEffect","copy","boardCategoryId","eventListApi","then","res","boardCnt","boardResDtoList","dtoList","menu","menu1","menu2","Tmenu1","Tmenu2","menu3","Tmenu3","searchData","catch","err","console","log","nodrop","isNull","length","map","i","onClick","String","boardId","padStart","style","fontWeight","marginBottom","width","overflow","textOverflow","whiteSpace","textAlign","title","content","regDateTime","split","text","subtext","func","registerNoticeApi","window","location","reload","forFunc","file","imageFiles","text1","text2","text3","postDelApi"],"sourceRoot":""}