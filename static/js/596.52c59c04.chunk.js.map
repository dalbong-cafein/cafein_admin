{"version":3,"file":"static/js/596.52c59c04.chunk.js","mappings":"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","sources":["components/common/modal/noticeModal.jsx","components/notices.jsx","pages/notice.jsx","util/desh.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Portal from \"./Portal\";\r\nimport styled from \"styled-components\";\r\nimport { ReactComponent as Header1 } from \"../../../svg/header1.svg\";\r\nimport { ReactComponent as Header2 } from \"../../../svg/header2.svg\";\r\nimport { ReactComponent as Footer } from \"../../../svg/footer.svg\";\r\nimport { ReactComponent as HeaderE } from \"../../../svg/headerE.svg\";\r\nimport { ReactComponent as Arrow } from \"../../../svg/ArrowUp.svg\";\r\nimport Row from \"../../atoms/row\";\r\nimport PVImg from \"../PVImg\";\r\n\r\nexport default function NoticeModal({ menu, setModal, item, setAlert }) {\r\n  const closeModal = () => {\r\n    setModal(false);\r\n  };\r\n  return (\r\n    <Portal>\r\n      <ModalBox>\r\n        <ModalContent>\r\n          {menu === \"notice\" ? (\r\n            <>\r\n              <Header1 />\r\n              <Header2 />\r\n              <TitleBox>\r\n                <p>{item.title}</p>\r\n                <p>{new Date().toLocaleDateString()}</p>\r\n              </TitleBox>\r\n              <ContentBox>\r\n                <div>{item.content}</div>\r\n                {item?.boardImageDtoList && (\r\n                  <div>\r\n                    <PVImg img={item?.boardImageDtoList[0]?.imageUrl} />\r\n                  </div>\r\n                )}\r\n              </ContentBox>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <HeaderE\r\n                style={{\r\n                  borderBottom: \"1px solid #efefef\",\r\n                  paddingBottom: \"16px\",\r\n                  backgroundColor: \"#fff\",\r\n                }}\r\n              />\r\n              <Headers>\r\n                <Row gap={4}>\r\n                  <p\r\n                    style={{\r\n                      color: \"#fc6406\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    Q\r\n                  </p>\r\n                  <p\r\n                    style={{\r\n                      color: \"#333333\",\r\n                      fontSize: \"15px\",\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </p>\r\n                </Row>\r\n                <Arrow />\r\n              </Headers>\r\n              <ContentBox2>\r\n                <div>{item.content}</div>\r\n                {item?.imageFile && (\r\n                  <div>\r\n                    <PVImg img={item?.imageFile[0]} />\r\n                  </div>\r\n                )}\r\n              </ContentBox2>\r\n            </>\r\n          )}\r\n          <Footer />\r\n        </ModalContent>\r\n        <ModalFooter>\r\n          <Btn color={\"#515151\"} onClick={closeModal}>\r\n            닫기\r\n          </Btn>\r\n          <Btn color={\"#2563EB\"} onClick={() => setAlert(true)}>\r\n            삭제\r\n          </Btn>\r\n        </ModalFooter>\r\n      </ModalBox>\r\n    </Portal>\r\n  );\r\n}\r\n\r\nconst ModalBox = styled.div`\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  background-color: #333333;\r\n  box-sizing: border-box;\r\n  border-radius: 16px;\r\n  border: 1px solid #515151;\r\n  // width: 727px;\r\n  // height: 694px;\r\n`;\r\n\r\nconst ModalFooter = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  gap: 20px;\r\n  box-sizing: border-box;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  padding: 20px 0;\r\n`;\r\n\r\nconst Btn = styled.div`\r\n  color: #fff;\r\n  width: 88px;\r\n  height: 36px;\r\n  background-color: ${(props) => props.color && props.color};\r\n  border-radius: 6px;\r\n  text-align: center;\r\n  line-height: 36px;\r\n  cursor: pointer;\r\n`;\r\nconst ModalContent = styled.div`\r\n  color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst TitleBox = styled.div`\r\n  width: 375px;\r\n  height: 86px;\r\n  padding: 20px 16px;\r\n  box-sizing: border-box;\r\n  background-color: #f7f7f7;\r\n  & > p:first-child {\r\n    font-size: 16px;\r\n    color: #333333;\r\n    line-height: 30px;\r\n  }\r\n  & > p:nth-child(2) {\r\n    font-size: 13px;\r\n    color: #acacac;\r\n    line-height: 13px;\r\n  }\r\n`;\r\nconst Headers = styled.div`\r\n  width: 375px;\r\n  height: 56px;\r\n  background-color: #fff;\r\n  display: flex;\r\n  box-sizing: border-box;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px 16px;\r\n  & > svg:nth-child(2) {\r\n    width: 11px;\r\n    height: 6.5px;\r\n    path {\r\n      fill: #646464;\r\n    }\r\n  }\r\n`;\r\nconst ContentBox = styled.div`\r\n  width: 375px;\r\n  min-height: 500px;\r\n  padding: 20px 16px;\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n  & > div:first-child {\r\n    white-space: pre-line;\r\n    font-size: 14px;\r\n    color: #333333;\r\n    min-height: 200px;\r\n    line-height: 20px;\r\n  }\r\n  & > div:nth-child(2) {\r\n    width: 200px;\r\n    min-height: 200px;\r\n    padding: 12px 0;\r\n  }\r\n`;\r\n\r\nconst ContentBox2 = styled.div`\r\n  width: 375px;\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n  min-height: 600px;\r\n  & > div:first-child {\r\n    margin: 16px 0 16px 16px;\r\n    padding: 12px;\r\n    width: 328px;\r\n    min-height: 200px;\r\n    box-sizing: border-box;\r\n    background-color: #f6f6f6;\r\n    border-radius: 8px;\r\n    white-space: pre-line;\r\n    font-size: 14px;\r\n    color: #333333;\r\n    line-height: 20px;\r\n  }\r\n  & > div:nth-child(2) {\r\n    width: 200px;\r\n    min-height: 200px;\r\n    padding: 0 16px;\r\n  }\r\n`;\r\n","import { useState, useRef, useEffect } from \"react\";\r\n\r\nimport * as S from \"../pages/style copy\";\r\nimport styled from \"styled-components\";\r\nimport * as SS from \"./noticesStyle\";\r\n\r\nimport Row from \"../components/atoms/row\";\r\n\r\nimport Paging from \"../components/common/Pagination\";\r\n\r\nimport { ReactComponent as Search } from \"../svg/Search.svg\";\r\nimport { ReactComponent as Photo } from \"../svg/photo.svg\";\r\nimport { ReactComponent as Check } from \"../svg/check.svg\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReactComponent as CloseIcon } from \"../svg/close.svg\";\r\n\r\nimport PVImg from \"../components/common/PVImg\";\r\nimport Alert from \"./common/modal/alert\";\r\nimport { adminFeedListApi } from \"../util/desh\";\r\nimport None from \"./None\";\r\n\r\nimport { useRecoilState } from \"recoil\";\r\nimport { registerNotice } from \"../recoil/NNotice\";\r\nimport { postDelApi, registerNoticeApi } from \"../util/events\";\r\nimport Preview from \"./common/modal/preview\";\r\nimport NoticeModal from \"./common/modal/noticeModal\";\r\nimport RedAlert from \"./common/modal/redAlert\";\r\nimport NoticeM from \"./common/modal/noticeM\";\r\n\r\nconst Notices = ({ menu }) => {\r\n  const [temp, setTemp] = useState([]);\r\n  const [selectItem, setSelectItem] = useState([]);\r\n  const [sort, setSort] = useState(\"DESC\");\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [register, setRegister] = useRecoilState(registerNotice);\r\n  const [preview, setPreview] = useState(false);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(0);\r\n  const [items, setItems] = useState(10);\r\n  const [alert, setAlert] = useState(false);\r\n  const [Dalert, setDAlert] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const handlePageChange = (page) => {\r\n    setPage(page);\r\n  };\r\n  const [file, setFile] = useState([]);\r\n  const onLoadFile = (e) => {\r\n    let copy = [...file];\r\n    if (copy.length >= 1) {\r\n      window.alert(\"이미지는 1개만 추가 가능합니다\");\r\n      return;\r\n    } else {\r\n      if (e.target.files[0]) {\r\n        copy = [...copy, e.target.files[0]];\r\n        setFile(copy);\r\n        const copy2 = { ...register };\r\n        copy2.imageFiles = copy;\r\n        setRegister(copy2);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteImg = (idx) => {\r\n    let copy = [...file];\r\n    copy.splice(idx, 1);\r\n    setFile(copy);\r\n  };\r\n\r\n  const onSubmit = (register) => {\r\n    registerNoticeApi(register)\r\n      .then((res) => {\r\n        setAlert(false);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const name = e.target.name;\r\n    const copy = { ...register };\r\n    copy[name] = e.target.value;\r\n    setRegister(copy);\r\n  };\r\n\r\n  const sortData = (id) => {\r\n    setSort(id);\r\n  };\r\n\r\n  const onDel = () => {\r\n    postDelApi(selectItem.boardId)\r\n      .then((res) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  useEffect(() => {\r\n    const copy = { ...register };\r\n    copy.boardCategoryId = 1;\r\n    setRegister(copy);\r\n    adminFeedListApi(page, sort).then((res) => {\r\n      setCount(res.data.data.boardCnt);\r\n      setTemp(res.data.data.boardResDtoList.dtoList);\r\n    });\r\n  }, [sort, page]);\r\n  const input = useRef();\r\n  return (\r\n    <>\r\n      <SS.Container>\r\n        <div>\r\n          <Row\r\n            justify={\"space-between\"}\r\n            align={\"baseline\"}\r\n            style={{ marginBottom: \"20px\" }}\r\n          >\r\n            <Row gap={15}>\r\n              <S.Sbtn id=\"DESC\" onClick={(e) => sortData(e.target.id)}>\r\n                최신순\r\n                {sort === \"DESC\" && <Check />}\r\n              </S.Sbtn>\r\n              <S.Sbtn id=\"ASC\" onClick={(e) => sortData(e.target.id)}>\r\n                오래된 순{sort === \"ASC\" && <Check />}\r\n              </S.Sbtn>\r\n            </Row>\r\n            <Row gap={15} align={\"baseline\"}>\r\n              <Paging\r\n                count={count}\r\n                handlePageChange={handlePageChange}\r\n                setPage={setPage}\r\n                page={page}\r\n              />\r\n              <Row style={{ borderBottom: \"1px solid #fff\" }}>\r\n                <S.Input\r\n                  placeholder=\"검색\"\r\n                  type=\"text\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n                <Search onClick={onclick} />\r\n              </Row>\r\n            </Row>\r\n          </Row>\r\n          <S.Wrapper isNull={temp.length === 0}>\r\n            <TableHeader>\r\n              <div>분류</div>\r\n              <div>제목</div>\r\n              <div>등록일</div>\r\n            </TableHeader>\r\n\r\n            {temp &&\r\n              temp.map((item, i) => (\r\n                <ItemRow\r\n                  key={i}\r\n                  onClick={() => {\r\n                    setModal(true);\r\n                    setSelectItem(item);\r\n                  }}\r\n                >\r\n                  <div>{String(item.boardId).padStart(6, \"0\")}</div>\r\n                  <div>\r\n                    <p style={{ fontWeight: \"bold\", marginBottom: \"5px\" }}>\r\n                      {item.title}\r\n                    </p>\r\n                    <p>\r\n                      {item.content.length > 30\r\n                        ? `${item.content.slice(0, 30)}...`\r\n                        : item.content}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div>{String(item.regDateTime).split(\"T\")[0]}</div>\r\n                </ItemRow>\r\n              ))}\r\n          </S.Wrapper>\r\n          {temp.length == 0 && <None text={\"공지\"} />}\r\n        </div>\r\n        <SS.NewNotice>\r\n          <p>새 공지 등록</p>\r\n\r\n          <div>\r\n            <SS.Input>\r\n              <p>날짜</p>\r\n              <div>{new Date().toLocaleDateString()}</div>\r\n            </SS.Input>\r\n\r\n            <SS.Input>\r\n              <p>제목</p>\r\n              <input type=\"text\" name=\"title\" onChange={(e) => onChange(e)} />\r\n            </SS.Input>\r\n            <SS.TextBox>\r\n              <textarea\r\n                cols=\"50\"\r\n                rows=\"20\"\r\n                placeholder=\"내용을 입력하세요\"\r\n                name=\"content\"\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n\r\n              <SS.PhotoBox>\r\n                <SS.FileUpload\r\n                  onClick={() => {\r\n                    input.current?.click();\r\n                  }}\r\n                >\r\n                  <Photo />\r\n                  <div>{file.length}/1</div>\r\n                  <input\r\n                    ref={input}\r\n                    type=\"file\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={(e) => onLoadFile(e)}\r\n                  />\r\n                </SS.FileUpload>\r\n                {file?.map((a, i) => {\r\n                  return (\r\n                    <SS.ImgBox key={i}>\r\n                      <CloseIcon name={a.name} onClick={() => deleteImg(i)} />\r\n                      <PVImg img={a} />\r\n                    </SS.ImgBox>\r\n                  );\r\n                })}\r\n              </SS.PhotoBox>\r\n            </SS.TextBox>\r\n          </div>\r\n          <Row gap={16} justify={\"end\"} align={\"baseline\"}>\r\n            <SS.Btn back={\"#515151\"} onClick={() => setPreview(!preview)}>\r\n              미리보기\r\n            </SS.Btn>\r\n            <SS.Btn back={\"#2563eb\"} onClick={() => setAlert(!alert)}>\r\n              등록\r\n            </SS.Btn>\r\n          </Row>\r\n        </SS.NewNotice>\r\n      </SS.Container>\r\n      {alert && (\r\n        <Alert\r\n          setAlert={setAlert}\r\n          text={\"공지사항 등록\"}\r\n          subtext={\"게시물을 등록하시겠습니까?\"}\r\n          func={onSubmit}\r\n          forFunc={register}\r\n        />\r\n      )}\r\n\r\n      {preview && (\r\n        <Preview\r\n          item={register}\r\n          setModal={setPreview}\r\n          file={file}\r\n          menu={menu}\r\n        />\r\n      )}\r\n      {modal && (\r\n        // <NoticeModal\r\n        //   setModal={setModal}\r\n        //   item={selectItem}\r\n        //   setAlert={setDAlert}\r\n        //   menu={menu}\r\n        // />\r\n        <NoticeM\r\n          selectItem2={selectItem}\r\n          setModal={setModal}\r\n          menu={menu}\r\n          setAlert={setDAlert}\r\n        />\r\n      )}\r\n      {Dalert && (\r\n        <RedAlert\r\n          text={\"공지사항 삭제\"}\r\n          text1={\"공지사항을 \"}\r\n          text2={\"삭제\"}\r\n          text3={\"하시겠습니까?\"}\r\n          setAlert={setDAlert}\r\n          func={onDel}\r\n          forFunc={null}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst TableHeader = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  width: 100%;\r\n  color: #8b8b8b;\r\n  text-align: center;\r\n  line-height: 42px;\r\n  border-bottom: 1px solid #515151;\r\n  & > div {\r\n    flex: 0.5;\r\n    border-right: 1px solid #515151;\r\n  }\r\n  & div:nth-child(2) {\r\n    flex: 2.5;\r\n  }\r\n\r\n  & > div:last-child {\r\n    flex: 1;\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nconst ItemRow = styled.div`\r\n  display: flex;\r\n  color: #e3e3e3;\r\n  font-size: 14px;\r\n  height: 72px;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #515151;\r\n\r\n  & > div {\r\n    // padding: 0 0 0 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: left;\r\n    line-height: 18px;\r\n    box-sizing: border-box;\r\n    flex: 0.5;\r\n    border-right: 1px solid #515151;\r\n  }\r\n\r\n  & div:nth-child(2) {\r\n    flex: 2.5;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n    & > p {\r\n      margin: 0 0 0 16px;\r\n    }\r\n  }\r\n\r\n  & > div:last-child {\r\n    flex: 1;\r\n    border-right: none;\r\n    border-bottom: none;\r\n  }\r\n`;\r\nexport default Notices;\r\n","import { useState, useRef } from \"react\";\r\nimport SelectHeader from \"../components/common/selectHeader\";\r\n\r\nimport Notices from \"../components/notices\";\r\nimport QnA from \"../components/QnA\";\r\n\r\nconst Notice = () => {\r\n  const [menu, setMenu] = useState(\"Notice\");\r\n\r\n  return (\r\n    <>\r\n      <SelectHeader\r\n        menu={\"notice\"}\r\n        menu1={\"notice\"}\r\n        menu2={\"qna\"}\r\n        Tmenu1={\"공지사항\"}\r\n        Tmenu2={\"자주 묻는 질문\"}\r\n      />\r\n\r\n      <Notices menu={menu} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","import { withAuthInstance } from \"./index\";\r\n\r\nexport const adminFeedListApi = async (page, sort) => {\r\n  return await withAuthInstance.get(`/boards?page=${page}&sort=${sort}`);\r\n};\r\n\r\n//오늘 새 데이터 추가\r\nexport const deshDataApi = async () => {\r\n  return await withAuthInstance.get(\"/register-data\");\r\n};\r\n\r\nexport const marketingDListApi = async () => {\r\n  return await withAuthInstance.get(`/coupons/limit`);\r\n};\r\n"],"names":["styled","props","color","TableHeader","ItemRow","menu","useState","temp","setTemp","selectItem","setSelectItem","sort","setSort","search","setSearch","useNavigate","useRecoilState","registerNotice","register","setRegister","preview","setPreview","page","setPage","count","setCount","alert","setAlert","Dalert","setDAlert","modal","setModal","file","setFile","onChange","e","name","target","copy","value","sortData","id","useEffect","boardCategoryId","adminFeedListApi","then","res","data","boardCnt","boardResDtoList","dtoList","input","useRef","justify","align","style","marginBottom","gap","onClick","handlePageChange","borderBottom","placeholder","type","Search","onclick","isNull","length","map","item","i","String","boardId","padStart","fontWeight","title","content","slice","regDateTime","split","None","text","Date","toLocaleDateString","cols","rows","current","click","ref","display","window","files","copy2","imageFiles","onLoadFile","a","idx","splice","deleteImg","img","back","subtext","func","registerNoticeApi","location","reload","catch","err","console","log","forFunc","selectItem2","text1","text2","text3","postDelApi","menu1","menu2","Tmenu1","Tmenu2","withAuthInstance","deshDataApi","marketingDListApi"],"sourceRoot":""}